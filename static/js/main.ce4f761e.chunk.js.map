{"version":3,"sources":["pages/router/notfound.js","pages/commonStyles.js","pages/util/config.js","pages/Home.js","pages/puzzleInfo.js","pages/Puzzles.js","pages/GuessTable.js","pages/PuzzlePage.js","pages/About.js","pages/router/Routing.js","pages/router/navBarStyles.js","pages/router/NavBar.js","App.js","serviceWorker.js","index.js"],"names":["Notfound","react_default","a","createElement","styles","theme","card","minWidth","marginBottom","padding","title","fontSize","header","paper","spacing","body","textAlign","wordWrap","paddingLeft","root","flexGrow","submitButton","marginLeft","marginRight","paddingRight","width","nextButton","marginTop","ThemeContext","React","createContext","Home","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","images","classes","className","Paper","Divider","style","react_router_dom","activeClassName","to","type","Button","variant","color","button","Component","contextType","withStyles","puzzleInfo","puzzleId","name","points","filter_fn","msg","isSubSequence","s1","s2","m","n","toLowerCase","length","answer","email","String","match","includes","charCount","split","reduce","acc","char","keys","filter","Math","log","test","text","bit1","output","html","flags","Array","fill","elements","Elements","H","He","Li","Be","B","C","N","O","F","Ne","Na","Mg","Al","Si","P","S","Cl","Ar","K","Ca","Sc","Ti","V","Cr","Mn","Fe","Co","Ni","Cu","Zn","Ga","Ge","As","Se","Br","Kr","Rb","Sr","Y","Zr","Nb","Mo","Tc","Ru","Rh","Pd","Ag","Cd","In","Sn","Sb","Te","I","Xe","Cs","Ba","La","Ce","Pr","Nd","Pm","Sm","Eu","Gd","Tb","Dy","Ho","Er","Tm","Yb","Lu","Hf","Ta","W","Re","Os","Ir","Pt","Au","Hg","Tl","Pb","Bi","Po","At","Rn","Fr","Ra","Ac","Th","Pa","U","Np","Pu","Am","Cm","Bk","Cf","Es","Fm","Md","No","Lr","Rf","Db","Sg","Bh","Hs","Mt","Ds","Rg","Cn","Nh","Fl","Mc","Lv","Ts","Og","x","substring","toUpperCase","bit2","replace","some","RegExp","Set","has","row1","row2","row3","prevRow","i","letter","currRow","cookies","Cookies","COOKIE_SUFFIX","MAX_COOKIES","MAX_PUZZLES","Puzzles","makeRequests","sumPerms","start","end","ans","state","perms","numAttempts","attempts","h","stored_progress","cookie_data","get","concat","shift","y","permsArray","receivedToken","noTeam","score","puzzlesList","toConsumableArray","map","_this2","Grid","container","item","xs","sm","md","key","descendingComparator","b","orderBy","headCells","id","numeric","disablePadding","label","EnhancedTableHead","order","TableHead","TableRow","TableCell","headCell","align","sortDirection","useStyles","makeStyles","table","visuallyHidden","border","clip","height","margin","overflow","position","top","EnhancedTable","_React$useState","useState","_React$useState2","slicedToArray","setOrder","_React$useState3","_React$useState4","setOrderBy","_React$useState5","_React$useState6","page","setPage","_React$useState7","_React$useState8","rowsPerPage","setRowsPerPage","selected","rows","JSON","parse","stringify","hideIncorrect","row","r","emptyRows","min","TableContainer","Table","aria-labelledby","size","aria-label","numSelected","onRequestSort","event","property","rowCount","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","response","isItemSelected","indexOf","labelId","role","aria-checked","tabIndex","backgroundColor","component","scope","g","colSpan","TablePagination","rowsPerPageOptions","count","onPageChange","newPage","onRowsPerPageChange","parseInt","target","value","MAX_PER_COOKIE","PuzzlePage","updateState","req","data","setState","defineProperty","updateTextField","e","newValue","errorText","textField","submitAnswer","guess","responsePayload","teamGuesses","prevState","push","offset","max","guessSlice","set","switchToggle","params","invalid","console","pts","textFieldDisabled","window","location","reload","error","errorInfo","remove","path","alert","onClick","nextPage","disabled","autoComplete","onSubmit","TextField","autoFocus","onChange","defaultValue","helperText","FormControlLabel","control","Switch","checked","switchOn","About","routing","react_router","exact","Routing","direction","alignItems","justify","Box","maxWidth","display","overflowScrolling","WebkitOverflowScrolling","toolbar","toolbarIcon","objectSpread","justifyContent","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","enteringScreen","menuButton","menuButtonHidden","drawerPaper","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","chartContainer","h5","createMuiTheme","responsiveFontSizes","NavBar","resetProgress","confirm","j","loggedIn","firstName","tokenId","ThemeProvider","Provider","fullName","debug","CssBaseline","AppBar","classNames","Toolbar","disableGutters","lib","Typography","noWrap","paddingTop","textAlignVertical","flexDirection","router_Routing","palette","secondary","main","contrastText","App","router_NavBar","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ce4f761e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst Notfound = () => <h1>Page not found :(</h1>;\r\n\r\nexport default Notfound","const styles = theme => ({\r\n  card: {\r\n    minWidth: 275,\r\n    marginBottom: 20,\r\n    padding: 18,\r\n  },\r\n  title: {\r\n    fontSize: 14,\r\n  },\r\n  header: {\r\n    fontSize: 18,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  body: {\r\n    textAlign: \"left\",\r\n    wordWrap: \"break-word\",\r\n    paddingLeft: '15px'\r\n  },\r\n  root: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n  submitButton: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    width: \"20%\"\r\n  },\r\n  nextButton: {\r\n    marginLeft: 'auto',\r\n    marginRight: 'auto',\r\n    marginTop: 20,\r\n    paddingLeft: 10,\r\n    paddingRight: 10,\r\n    width: \"8%\"\r\n  },\r\n});\r\n\r\nexport default styles;","import React from 'react';\r\n\r\nconst ThemeContext = React.createContext(0);\r\n\r\nexport { ThemeContext };","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport styles from './commonStyles.js';\r\nimport { ThemeContext } from \"./util/config.js\";\r\n\r\nclass Home extends React.Component {\r\n  static contextType = ThemeContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.images = [];\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"Home\">\r\n        <Paper className={classes.paper}>\r\n          <h2>Filtered!</h2>\r\n          <Divider />\r\n          <h3 style={{ marginBottom: \"0px\" }}>JamminAI has made its debut, but messages are getting blocked by its safety filters! <br/>Send messages to see which get blocked to deduce the rules for the safety filters.</h3>\r\n          <div> <br/>\r\n          <h3>Rules:</h3>\r\n          {`1) Messages must only contain characters found on a regular keyboard (excluding spaces): a-zA-Z0-9.\\/<>?;:\"'!@#$%^&*()\\[\\]{}_+=|\\\\-~` + \"`\"}\r\n          </div>\r\n          {`2) Message length must be <=30 characters.`}\r\n          <br/>\r\n          {`3) Filter rules are single phrase rules without any \"AND\" or \"OR\" clauses. Partial credit may be awarded.`}\r\n          <br/>\r\n          {`4) Filter rules may be correlated with message length, but do not place explicit length restrictions.`}\r\n          <br/>\r\n          {`5) The puzzle name is related to the filter rule. Harder rules may contain hints inline.`}\r\n          <br /> <br/>\r\n          <div><NavLink activeClassName=\"active\" className=\"link\" to={\"/puzzles\"} type=\"menu\">\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.button}>\r\n              Puzzles\r\n            </Button>\r\n          </NavLink><br /> <br /></div>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(Home);","import React from 'react';\r\n\r\nconst validateEmail = (email) => {\r\n  return String(email)\r\n    .toLowerCase()\r\n    .match(\r\n      /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|.(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\r\n    );\r\n};\r\n\r\nconst rrWords = (msg) => {\r\n  const words = ['a', 'love', 'and', 'run', 'down', 'guy', 'from', 'to', 'cry', \"we've\", \"we're\", \"commitment's\", \"you're\", 'but', 'we', 'lie', 'for', 'gotta', 'how', 'on', 'desert', 'aching,', \"what's\", 'wanna', 'up', 'me', 'your', 'a', 'so', 'do', 'see', 'ask', 'been', 'hurt', 'full', 'inside,', 'each', 'we', 'know', 'get', 'game', 'any', 'and', 'feeling', 'understand', 'never', 'rules', 'gonna', \"heart's\", 'play', 'make', 'too', 'around', \"we're\", 'both', \"don't\", 'tell', 'give', 'i', 'goodbye', 'no', 'going', 'blind', 'it', 'shy', 'if', 'you', 'what', 'this', 'of', 'just', 'long', 'thinking', 'other', 'you', \"wouldn't\", 'say', 'give,', 'let', 'known', 'strangers', 'the', 'never', \"i'm\"];\r\n  return words.includes(msg.toLowerCase());\r\n}\r\n\r\nconst states = (msg) => {\r\n  // https://github.com/rreichel3/US-Stock-Symbols/blob/main/nasdaq/nasdaq_tickers.txt\r\n  const tickers = new Set(['AACG', 'AADI', 'AAGR', 'AAGRW', 'AAL', 'AAME', 'AAOI', 'AAON', 'AAPL', 'ABAT', 'ABCL', 'ABEO', 'ABL', 'ABLLL', 'ABLLW', 'ABLV', 'ABLVW', 'ABNB', 'ABOS', 'ABSI', 'ABTS', 'ABUS', 'ABVC', 'ABVE', 'ABVEW', 'ABVX', 'ACAB', 'ACABW', 'ACAC', 'ACACW', 'ACAD', 'ACB', 'ACCD', 'ACDC', 'ACET', 'ACGL', 'ACGLN', 'ACGLO', 'ACHC', 'ACHL', 'ACHV', 'ACIC', 'ACIU', 'ACIW', 'ACLS', 'ACLX', 'ACMR', 'ACNB', 'ACNT', 'ACON', 'ACONW', 'ACRS', 'ACRV', 'ACST', 'ACT', 'ACTG', 'ACTU', 'ACVA', 'ACXP', 'ADAG', 'ADAP', 'ADBE', 'ADD', 'ADEA', 'ADGM', 'ADI', 'ADIL', 'ADMA', 'ADN', 'ADNWW', 'ADP', 'ADPT', 'ADSE', 'ADSEW', 'ADSK', 'ADTN', 'ADTX', 'ADUS', 'ADV', 'ADVM', 'ADVWW', 'ADXN', 'AEAE', 'AEHL', 'AEHR', 'AEI', 'AEIS', 'AEMD', 'AENT', 'AENTW', 'AEP', 'AERT', 'AEYE', 'AFBI', 'AFCG', 'AFJK', 'AFMD', 'AFRI', 'AFRIW', 'AFRM', 'AFYA', 'AGAE', 'AGBA', 'AGBAW', 'AGEN', 'AGFY', 'AGIO', 'AGMH', 'AGNC', 'AGNCL', 'AGNCM', 'AGNCN', 'AGNCO', 'AGNCP', 'AGRI', 'AGYS', 'AHCO', 'AHG', 'AIEV', 'AIFF', 'AIHS', 'AILE', 'AILEW', 'AIMAU', 'AIMAW', 'AIMBU', 'AIMD', 'AIOT', 'AIP', 'AIRE', 'AIRG', 'AIRJ', 'AIRJW', 'AIRS', 'AIRT', 'AIRTP', 'AISP', 'AISPW', 'AITR', 'AITRU', 'AIXI', 'AKAM', 'AKAN', 'AKBA', 'AKRO', 'AKTS', 'AKTX', 'AKYA', 'ALAB', 'ALAR', 'ALBT', 'ALCE', 'ALCO', 'ALCY', 'ALCYU', 'ALCYW', 'ALDX', 'ALEC', 'ALF', 'ALFUU', 'ALFUW', 'ALGM', 'ALGN', 'ALGS', 'ALGT', 'ALHC', 'ALIM', 'ALKS', 'ALKT', 'ALLK', 'ALLO', 'ALLR', 'ALLT', 'ALMS', 'ALNT', 'ALNY', 'ALOT', 'ALPP', 'ALRM', 'ALRN', 'ALRS', 'ALSA', 'ALSAR', 'ALSAU', 'ALSAW', 'ALT', 'ALTI', 'ALTO', 'ALTR', 'ALTS', 'ALVO', 'ALVOW', 'ALVR', 'ALXO', 'ALZN', 'AMAL', 'AMAT', 'AMBA', 'AMCX', 'AMD', 'AMED', 'AMGN', 'AMIX', 'AMKR', 'AMLI', 'AMLX', 'AMPG', 'AMPH', 'AMPL', 'AMRK', 'AMRN', 'AMRX', 'AMSC', 'AMSF', 'AMST', 'AMSWA', 'AMTX', 'AMWD', 'AMZN', 'ANAB', 'ANDE', 'ANEB', 'ANGH', 'ANGHW', 'ANGI', 'ANGO', 'ANIK', 'ANIP', 'ANIX', 'ANL', 'ANNX', 'ANSC', 'ANSCU', 'ANSCW', 'ANSS', 'ANTE', 'ANTX', 'ANY', 'AOGO', 'AOGOW', 'AOSL', 'AOUT', 'APA', 'APCX', 'APCXW', 'APDN', 'APEI', 'APGE', 'API', 'APLD', 'APLM', 'APLMW', 'APLS', 'APLT', 'APM', 'APOG', 'APP', 'APPF', 'APPN', 'APPS', 'APRE', 'APTO', 'APVO', 'APWC', 'APXI', 'APXIW', 'APYX', 'AQB', 'AQMS', 'AQST', 'AQU', 'AQUNU', 'ARAY', 'ARBB', 'ARBE', 'ARBEW', 'ARBK', 'ARBKL', 'ARCB', 'ARCC', 'ARCT', 'ARDX', 'AREB', 'AREBW', 'AREC', 'ARGX', 'ARHS', 'ARKO', 'ARKOW', 'ARKR', 'ARLP', 'ARM', 'AROW', 'ARQ', 'ARQQ', 'ARQQW', 'ARQT', 'ARRY', 'ARTL', 'ARTNA', 'ARTV', 'ARTW', 'ARVN', 'ARWR', 'ASCB', 'ASCBR', 'ASCBU', 'ASLE', 'ASMB', 'ASML', 'ASND', 'ASNS', 'ASO', 'ASPI', 'ASPS', 'ASRT', 'ASRV', 'ASST', 'ASTC', 'ASTE', 'ASTH', 'ASTI', 'ASTL', 'ASTLW', 'ASTS', 'ASTSW', 'ASUR', 'ASYS', 'ATAI', 'ATAT', 'ATCOL', 'ATEC', 'ATER', 'ATEX', 'ATGL', 'ATHA', 'ATHE', 'ATIF', 'ATLC', 'ATLCL', 'ATLCP', 'ATLCZ', 'ATLO', 'ATLX', 'ATMC', 'ATMV', 'ATMVR', 'ATNF', 'ATNFW', 'ATNI', 'ATOM', 'ATOS', 'ATPC', 'ATRA', 'ATRC', 'ATRO', 'ATSG', 'ATXG', 'ATXI', 'ATXS', 'ATYR', 'AUBN', 'AUDC', 'AUGX', 'AUID', 'AUPH', 'AUR', 'AURA', 'AUROW', 'AUTL', 'AUUD', 'AUUDW', 'AVAH', 'AVAV', 'AVBP', 'AVDL', 'AVDX', 'AVGO', 'AVGR', 'AVIR', 'AVNW', 'AVO', 'AVPT', 'AVPTW', 'AVT', 'AVTE', 'AVTX', 'AVXL', 'AWH', 'AWRE', 'AXDX', 'AXGN', 'AXNX', 'AXON', 'AXSM', 'AXTI', 'AY', 'AYRO', 'AYTU', 'AZ', 'AZI', 'AZN', 'AZPN', 'AZTA', 'BACK', 'BAER', 'BAERW', 'BAFN', 'BAND', 'BANF', 'BANFP', 'BANL', 'BANR', 'BANX', 'BAOS', 'BASE', 'BATRA', 'BATRK', 'BAYA', 'BAYAR', 'BAYAU', 'BBCP', 'BBGI', 'BBIO', 'BBLG', 'BBSI', 'BCAB', 'BCAL', 'BCAN', 'BCBP', 'BCDA', 'BCG', 'BCGWW', 'BCLI', 'BCML', 'BCOV', 'BCOW', 'BCPC', 'BCRX', 'BCSA', 'BCSAU', 'BCSAW', 'BCTX', 'BCTXW', 'BCYC', 'BDRX', 'BDSX', 'BDTX', 'BEAM', 'BEAT', 'BEATW', 'BECN', 'BEEM', 'BELFA', 'BELFB', 'BENF', 'BENFW', 'BETR', 'BETRW', 'BFC', 'BFI', 'BFIIW', 'BFIN', 'BFRG', 'BFRGW', 'BFRI', 'BFST', 'BGC', 'BGFV', 'BGLC', 'BGM', 'BGNE', 'BGXX', 'BHAC', 'BHACU', 'BHACW', 'BHAT', 'BHF', 'BHFAL', 'BHFAM', 'BHFAN', 'BHFAO', 'BHFAP', 'BHIL', 'BHRB', 'BIAF', 'BIAFW', 'BIDU', 'BIGC', 'BIIB', 'BILI', 'BIOR', 'BIOX', 'BIRD', 'BITF', 'BIVI', 'BJDX', 'BJRI', 'BKHA', 'BKHAR', 'BKHAU', 'BKNG', 'BKR', 'BKYI', 'BL', 'BLAC', 'BLACR', 'BLACU', 'BLACW', 'BLBD', 'BLBX', 'BLDE', 'BLDEW', 'BLDP', 'BLEU', 'BLEUR', 'BLFS', 'BLFY', 'BLIN', 'BLKB', 'BLMN', 'BLMZ', 'BLNK', 'BLRX', 'BLTE', 'BLUE', 'BLZE', 'BMBL', 'BMEA', 'BMR', 'BMRA', 'BMRC', 'BMRN', 'BNAI', 'BNAIW', 'BNGO', 'BNIX', 'BNIXR', 'BNOX', 'BNR', 'BNRG', 'BNTC', 'BNTX', 'BNZI', 'BNZIW', 'BOCN', 'BOF', 'BOKF', 'BOLD', 'BOLT', 'BON', 'BOOM', 'BOSC', 'BOTJ', 'BOWN', 'BOWNR', 'BOXL', 'BPMC', 'BPOP', 'BPOPM', 'BPRN', 'BPTH', 'BPYPM', 'BPYPN', 'BPYPO', 'BPYPP', 'BRAC', 'BRAG', 'BREA', 'BRFH', 'BRID', 'BRKH', 'BRKHU', 'BRKHW', 'BRKL', 'BRKR', 'BRLS', 'BRLSW', 'BRLT', 'BRNS', 'BROG', 'BROGW', 'BRTX', 'BRY', 'BRZE', 'BSBK', 'BSET', 'BSFC', 'BSIIU', 'BSLK', 'BSLKW', 'BSRR', 'BSVN', 'BSY', 'BTAI', 'BTBD', 'BTBDW', 'BTBT', 'BTCS', 'BTCT', 'BTCTW', 'BTDR', 'BTM', 'BTMD', 'BTMWW', 'BTOC', 'BTOG', 'BTSG', 'BTSGU', 'BUJA', 'BUJAU', 'BUJAW', 'BUSE', 'BVFL', 'BVS', 'BWAY', 'BWB', 'BWBBP', 'BWEN', 'BWFG', 'BWIN', 'BWMN', 'BYFC', 'BYND', 'BYNO', 'BYNOU', 'BYRN', 'BYSI', 'BYU', 'BZ', 'BZFD', 'BZFDW', 'BZUN', 'CAAS', 'CABA', 'CAC', 'CACC', 'CACO', 'CADL', 'CAKE', 'CALC', 'CALM', 'CALT', 'CAMT', 'CAN', 'CAPR', 'CAPT', 'CAPTW', 'CAR', 'CARA', 'CARE', 'CARG', 'CARM', 'CART', 'CARV', 'CASH', 'CASI', 'CASS', 'CASY', 'CATY', 'CBAN', 'CBAT', 'CBFV', 'CBNK', 'CBRG', 'CBRL', 'CBSH', 'CBUS', 'CCAP', 'CCB', 'CCBG', 'CCCC', 'CCCS', 'CCD', 'CCEC', 'CCEP', 'CCG', 'CCGWW', 'CCIX', 'CCIXU', 'CCIXW', 'CCLD', 'CCLDO', 'CCLDP', 'CCNE', 'CCNEP', 'CCOI', 'CCRN', 'CCSI', 'CCTG', 'CCTS', 'CDAQ', 'CDIO', 'CDIOW', 'CDLX', 'CDMO', 'CDNA', 'CDNS', 'CDRO', 'CDROW', 'CDT', 'CDTG', 'CDTX', 'CDW', 'CDXC', 'CDXS', 'CDZI', 'CDZIP', 'CEAD', 'CEADW', 'CECO', 'CEG', 'CELC', 'CELH', 'CELU', 'CELUW', 'CELZ', 'CENN', 'CENT', 'CENTA', 'CENX', 'CEP', 'CERO', 'CEROW', 'CERS', 'CERT', 'CETX', 'CETY', 'CEVA', 'CFB', 'CFBK', 'CFFI', 'CFFN', 'CFFS', 'CFFSW', 'CFLT', 'CFSB', 'CG', 'CGABL', 'CGBD', 'CGBDL', 'CGBS', 'CGBSW', 'CGC', 'CGEM', 'CGEN', 'CGNT', 'CGNX', 'CGO', 'CGON', 'CGTX', 'CHCI', 'CHCO', 'CHDN', 'CHEF', 'CHEK', 'CHI', 'CHK', 'CHKEL', 'CHKEW', 'CHKEZ', 'CHKP', 'CHMG', 'CHNR', 'CHR', 'CHRD', 'CHRS', 'CHRW', 'CHSCL', 'CHSCM', 'CHSCN', 'CHSCO', 'CHSCP', 'CHSN', 'CHTR', 'CHUY', 'CHW', 'CHX', 'CHY', 'CIFR', 'CIFRW', 'CIGI', 'CINF', 'CING', 'CINGW', 'CISO', 'CISS', 'CITE', 'CITEU', 'CITEW', 'CIVB', 'CJET', 'CJJD', 'CKPT', 'CLAR', 'CLBK', 'CLBT', 'CLBTW', 'CLDX', 'CLEU', 'CLFD', 'CLGN', 'CLIR', 'CLLS', 'CLMB', 'CLMT', 'CLNE', 'CLNN', 'CLNNW', 'CLOV', 'CLPS', 'CLPT', 'CLRB', 'CLRC', 'CLRO', 'CLSD', 'CLSK', 'CLST', 'CLWT', 'CMAX', 'CMAXW', 'CMBM', 'CMCO', 'CMCSA', 'CMCT', 'CME', 'CMLS', 'CMMB', 'CMND', 'CMPO', 'CMPOW', 'CMPR', 'CMPS', 'CMPX', 'CMRX', 'CMTL', 'CNDT', 'CNET', 'CNEY', 'CNFR', 'CNFRZ', 'CNOB', 'CNOBP', 'CNSL', 'CNSP', 'CNTA', 'CNTB', 'CNTM', 'CNTX', 'CNTY', 'CNVS', 'CNXC', 'CNXN', 'COCH', 'COCHW', 'COCO', 'COCP', 'CODA', 'CODX', 'COEP', 'COEPW', 'COFS', 'COGT', 'COHU', 'COIN', 'COKE', 'COLB', 'COLL', 'COLM', 'COMM', 'COO', 'COOP', 'COOT', 'COOTW', 'CORT', 'CORZ', 'CORZW', 'CORZZ', 'COSM', 'COST', 'COYA', 'CPB', 'CPBI', 'CPHC', 'CPIX', 'CPOP', 'CPRT', 'CPRX', 'CPSH', 'CPSS', 'CPTN', 'CPTNW', 'CPZ', 'CRAI', 'CRBP', 'CRBU', 'CRCT', 'CRDF', 'CRDL', 'CRDO', 'CREG', 'CRESW', 'CRESY', 'CREV', 'CREVW', 'CREX', 'CRGO', 'CRGX', 'CRIS', 'CRKN', 'CRMD', 'CRML', 'CRMLW', 'CRMT', 'CRNC', 'CRNT', 'CRNX', 'CRON', 'CROX', 'CRSP', 'CRSR', 'CRTO', 'CRUS', 'CRVL', 'CRVO', 'CRVS', 'CRWD', 'CRWS', 'CSBR', 'CSCI', 'CSCO', 'CSGP', 'CSGS', 'CSIQ', 'CSLM', 'CSLMR', 'CSLMU', 'CSLR', 'CSLRW', 'CSPI', 'CSQ', 'CSTE', 'CSTL', 'CSWC', 'CSWCZ', 'CSWI', 'CSX', 'CTAS', 'CTBI', 'CTCX', 'CTHR', 'CTKB', 'CTLP', 'CTMX', 'CTNM', 'CTNT', 'CTOR', 'CTRM', 'CTRN', 'CTSH', 'CTSO', 'CTXR', 'CUB', 'CUBA', 'CUBWU', 'CUBWW', 'CUE', 'CURI', 'CURIW', 'CURR', 'CUTR', 'CVAC', 'CVBF', 'CVCO', 'CVGI', 'CVGW', 'CVKD', 'CVLT', 'CVRX', 'CVV', 'CWBC', 'CWCO', 'CWD', 'CWST', 'CXAI', 'CXAIW', 'CXDO', 'CYBR', 'CYCC', 'CYCCP', 'CYCN', 'CYN', 'CYRX', 'CYTH', 'CYTHW', 'CYTK', 'CYTO', 'CZFS', 'CZNC', 'CZR', 'CZWI', 'DADA', 'DAIO', 'DAKT', 'DALN', 'DARE', 'DASH', 'DATS', 'DATSW', 'DAVE', 'DAVEW', 'DAWN', 'DBGI', 'DBGIW', 'DBVT', 'DBX', 'DCBO', 'DCGO', 'DCOM', 'DCOMG', 'DCOMP', 'DCTH', 'DDI', 'DDOG', 'DECA', 'DECAW', 'DENN', 'DERM', 'DFLI', 'DGHI', 'DGICA', 'DGICB', 'DGII', 'DGLY', 'DH', 'DHAI', 'DHAIW', 'DHC', 'DHCNI', 'DHCNL', 'DHIL', 'DIBS', 'DIOD', 'DIST', 'DJCO', 'DJT', 'DJTWW', 'DKNG', 'DLHC', 'DLO', 'DLPN', 'DLTH', 'DLTR', 'DMAC', 'DMLP', 'DMRC', 'DNLI', 'DNTH', 'DNUT', 'DOCU', 'DOGZ', 'DOMH', 'DOMO', 'DOOO', 'DORM', 'DOX', 'DOYU', 'DPCS', 'DPRO', 'DRCT', 'DRIO', 'DRMA', 'DRRX', 'DRS', 'DRTS', 'DRTSW', 'DRUG', 'DRVN', 'DSGN', 'DSGR', 'DSGX', 'DSP', 'DSWL', 'DSY', 'DSYWW', 'DTCK', 'DTI', 'DTIL', 'DTSQU', 'DTSS', 'DTST', 'DTSTW', 'DUET', 'DUO', 'DUOL', 'DUOT', 'DVAX', 'DWSN', 'DXCM', 'DXLG', 'DXPE', 'DXR', 'DXYN', 'DYAI', 'DYCQ', 'DYN', 'EA', 'EAST', 'EBAY', 'EBC', 'EBMT', 'EBON', 'EBTC', 'ECBK', 'ECDA', 'ECDAW', 'ECOR', 'ECPG', 'ECX', 'ECXWW', 'EDAP', 'EDBL', 'EDBLW', 'EDIT', 'EDRY', 'EDSA', 'EDTK', 'EDUC', 'EEFT', 'EEIQ', 'EFOI', 'EFSC', 'EFSCP', 'EGAN', 'EGBN', 'EGHT', 'EGIO', 'EGRX', 'EH', 'EHGO', 'EHTH', 'EJH', 'EKSO', 'ELAB', 'ELBM', 'ELDN', 'ELEV', 'ELSE', 'ELTK', 'ELTX', 'ELUT', 'ELVA', 'ELVN', 'ELWS', 'ELYM', 'EM', 'EMBC', 'EMCG', 'EMCGW', 'EMKR', 'EML', 'ENG', 'ENGN', 'ENGNW', 'ENLT', 'ENLV', 'ENPH', 'ENSC', 'ENSG', 'ENTA', 'ENTG', 'ENTO', 'ENTX', 'ENVB', 'ENVX', 'EOLS', 'EOSE', 'EOSEW', 'EPIX', 'EPOW', 'EPRX', 'EPSN', 'EQ', 'EQIX', 'ERAS', 'ERIC', 'ERIE', 'ERII', 'ERNA', 'ESCA', 'ESEA', 'ESGL', 'ESGLW', 'ESGR', 'ESGRO', 'ESGRP', 'ESHA', 'ESHAR', 'ESLA', 'ESLAW', 'ESLT', 'ESOA', 'ESPR', 'ESQ', 'ESSA', 'ESTA', 'ETHA', 'ETNB', 'ETON', 'ETSY', 'EU', 'EUDA', 'EUDAW', 'EURKU', 'EVAX', 'EVCM', 'EVER', 'EVGN', 'EVGO', 'EVGOW', 'EVGR', 'EVGRU', 'EVGRW', 'EVLV', 'EVLVW', 'EVO', 'EVOK', 'EVRG', 'EVTV', 'EWBC', 'EWCZ', 'EWTX', 'EXAI', 'EXAS', 'EXC', 'EXEL', 'EXFY', 'EXLS', 'EXPE', 'EXPI', 'EXPO', 'EXTR', 'EYE', 'EYEN', 'EYPT', 'EZFL', 'EZGO', 'EZPW', 'FA', 'FAAS', 'FAASW', 'FAMI', 'FANG', 'FANH', 'FARM', 'FARO', 'FAST', 'FAT', 'FATBB', 'FATBP', 'FATBW', 'FATE', 'FBIO', 'FBIOP', 'FBIZ', 'FBLG', 'FBNC', 'FBRX', 'FBYD', 'FBYDW', 'FCAP', 'FCBC', 'FCCO', 'FCEL', 'FCFS', 'FCNCA', 'FCNCO', 'FCNCP', 'FCUV', 'FDBC', 'FDMT', 'FDSB', 'FDUS', 'FEAM', 'FEBO', 'FEIM', 'FELE', 'FEMY', 'FENC', 'FER', 'FFBC', 'FFIC', 'FFIE', 'FFIEW', 'FFIN', 'FFIV', 'FFNW', 'FGBI', 'FGBIP', 'FGEN', 'FGF', 'FGFPP', 'FGI', 'FHB', 'FHTX', 'FIAC', 'FIACU', 'FIACW', 'FIBK', 'FINW', 'FIP', 'FISI', 'FITB', 'FITBI', 'FITBO', 'FITBP', 'FIVE', 'FIVN', 'FIZZ', 'FKWL', 'FLD', 'FLDDU', 'FLDDW', 'FLEX', 'FLGC', 'FLGT', 'FLIC', 'FLL', 'FLNC', 'FLNT', 'FLUX', 'FLWS', 'FLXS', 'FLYE', 'FLYW', 'FMAO', 'FMBH', 'FMNB', 'FMST', 'FNGR', 'FNKO', 'FNLC', 'FNVT', 'FNVTU', 'FNVTW', 'FNWB', 'FNWD', 'FOLD', 'FONR', 'FORA', 'FORD', 'FORL', 'FORM', 'FORR', 'FORTY', 'FOSL', 'FOSLL', 'FOX', 'FOXA', 'FOXF', 'FPAY', 'FRAF', 'FRBA', 'FRES', 'FRGT', 'FRHC', 'FRLA', 'FRLAU', 'FRME', 'FRMEP', 'FROG', 'FRPH', 'FRPT', 'FRSH', 'FRST', 'FRSX', 'FRZA', 'FSBC', 'FSBW', 'FSEA', 'FSFG', 'FSHP', 'FSHPR', 'FSHPU', 'FSLR', 'FSTR', 'FSUN', 'FSV', 'FTAI', 'FTAIM', 'FTAIN', 'FTAIO', 'FTAIP', 'FTCI', 'FTDR', 'FTEK', 'FTEL', 'FTFT', 'FTHM', 'FTII', 'FTLF', 'FTNT', 'FTRE', 'FUFU', 'FUFUW', 'FULC', 'FULT', 'FULTP', 'FUNC', 'FUND', 'FUSB', 'FUTU', 'FVCB', 'FWONA', 'FWONK', 'FWRD', 'FWRG', 'FXNC', 'FYBR', 'GABC', 'GAIA', 'GAIN', 'GAINL', 'GAINN', 'GAINZ', 'GALT', 'GAMB', 'GAME', 'GAN', 'GANX', 'GAQ', 'GASS', 'GATE', 'GATEW', 'GAUZ', 'GBBK', 'GBBKR', 'GBDC', 'GBIO', 'GBNY', 'GCBC', 'GCMG', 'GCMGW', 'GCT', 'GCTK', 'GDC', 'GDEN', 'GDEV', 'GDEVW', 'GDHG', 'GDRX', 'GDS', 'GDST', 'GDSTW', 'GDTC', 'GDYN', 'GECC', 'GECCI', 'GECCM', 'GECCO', 'GECCZ', 'GEG', 'GEGGL', 'GEHC', 'GEN', 'GENE', 'GENK', 'GEOS', 'GERN', 'GEVO', 'GFAI', 'GFAIW', 'GFS', 'GGAL', 'GGR', 'GGROW', 'GH', 'GHIX', 'GHIXU', 'GHRS', 'GHSI', 'GIFI', 'GIFT', 'GIGGU', 'GIGM', 'GIII', 'GILD', 'GILT', 'GIPR', 'GLAC', 'GLAD', 'GLADZ', 'GLBE', 'GLBS', 'GLBZ', 'GLDD', 'GLLI', 'GLLIU', 'GLMD', 'GLNG', 'GLPG', 'GLPI', 'GLRE', 'GLSI', 'GLST', 'GLSTU', 'GLTO', 'GLUE', 'GLYC', 'GMAB', 'GMGI', 'GMM', 'GNFT', 'GNLN', 'GNLX', 'GNPX', 'GNSS', 'GNTA', 'GNTX', 'GO', 'GOCO', 'GODN', 'GODNR', 'GOEV', 'GOEVW', 'GOGL', 'GOGO', 'GOOD', 'GOODN', 'GOODO', 'GOOG', 'GOOGL', 'GORV', 'GOSS', 'GOVX', 'GOVXW', 'GP', 'GPAT', 'GPATU', 'GPATW', 'GPCR', 'GPRE', 'GPRO', 'GRAB', 'GRABW', 'GRAL', 'GRDI', 'GRDIW', 'GREE', 'GREEL', 'GRFS', 'GRI', 'GRNQ', 'GROW', 'GRPN', 'GRRR', 'GRRRW', 'GRTS', 'GRVY', 'GRWG', 'GRYP', 'GSBC', 'GSHD', 'GSIT', 'GSIW', 'GSM', 'GSMGW', 'GSUN', 'GT', 'GTAC', 'GTBP', 'GTEC', 'GTHX', 'GTI', 'GTIM', 'GTLB', 'GTX', 'GURE', 'GUTS', 'GV', 'GVH', 'GVP', 'GWAV', 'GWRS', 'GXAI', 'GYRE', 'GYRO', 'HA', 'HAFC', 'HAIA', 'HAIAW', 'HAIN', 'HALO', 'HAO', 'HAS', 'HAYN', 'HBAN', 'HBANL', 'HBANM', 'HBANP', 'HBCP', 'HBIO', 'HBNC', 'HBT', 'HCAT', 'HCKT', 'HCM', 'HCP', 'HCSG', 'HCTI', 'HCVI', 'HCVIU', 'HCVIW', 'HCWB', 'HDL', 'HDSN', 'HEAR', 'HEES', 'HELE', 'HEPA', 'HEPS', 'HFBL', 'HFFG', 'HFWA', 'HGBL', 'HHGC', 'HHS', 'HIFS', 'HIHO', 'HIMX', 'HITI', 'HIVE', 'HKIT', 'HLIT', 'HLMN', 'HLNE', 'HLP', 'HLVX', 'HLXB', 'HMNF', 'HMST', 'HNNA', 'HNNAZ', 'HNRG', 'HNST', 'HNVR', 'HOFT', 'HOFV', 'HOLO', 'HOLOW', 'HOLX', 'HON', 'HONDU', 'HONE', 'HOOD', 'HOOK', 'HOPE', 'HOTH', 'HOUR', 'HOVNP', 'HOVR', 'HOVRW', 'HOWL', 'HPAI', 'HPAIW', 'HPCO', 'HPH', 'HPK', 'HPKEW', 'HQI', 'HQY', 'HRMY', 'HROW', 'HROWL', 'HROWM', 'HRTX', 'HRYU', 'HRZN', 'HSAI', 'HSCS', 'HSDT', 'HSIC', 'HSII', 'HSON', 'HSPO', 'HSPOR', 'HST', 'HSTM', 'HTBI', 'HTBK', 'HTCR', 'HTHT', 'HTIA', 'HTIBP', 'HTLD', 'HTLF', 'HTLFP', 'HTOO', 'HTZ', 'HTZWW', 'HUBC', 'HUBCW', 'HUBCZ', 'HUBG', 'HUDI', 'HUIZ', 'HUMA', 'HUMAW', 'HURC', 'HURN', 'HUT', 'HWBK', 'HWC', 'HWCPZ', 'HWH', 'HWKN', 'HYFM', 'HYMC', 'HYMCL', 'HYMCW', 'HYPR', 'HYZN', 'HYZNW', 'IAC', 'IART', 'IAS', 'IBAC', 'IBACR', 'IBCP', 'IBEX', 'IBKR', 'IBOC', 'IBRX', 'IBTX', 'ICAD', 'ICCC', 'ICCH', 'ICCM', 'ICCT', 'ICFI', 'ICG', 'ICHR', 'ICLK', 'ICLR', 'ICMB', 'ICON', 'ICU', 'ICUCW', 'ICUI', 'IDAI', 'IDCC', 'IDN', 'IDXX', 'IDYA', 'IEP', 'IESC', 'IFBD', 'IFRX', 'IGIC', 'IGMS', 'IGTA', 'IGTAR', 'IGTAW', 'IHRT', 'III', 'IIIV', 'IINN', 'IINNW', 'IKNA', 'IKT', 'ILAG', 'ILMN', 'ILPT', 'IMAB', 'IMCC', 'IMCR', 'IMKTA', 'IMMP', 'IMMR', 'IMMX', 'IMNM', 'IMNN', 'IMOS', 'IMPP', 'IMPPP', 'IMRN', 'IMRX', 'IMTE', 'IMTX', 'IMTXW', 'IMUX', 'IMVT', 'IMXI', 'INAB', 'INAQ', 'INBK', 'INBKZ', 'INBS', 'INBX', 'INCR', 'INCY', 'INDB', 'INDI', 'INDP', 'INDV', 'INFN', 'INGN', 'INHD', 'INKT', 'INM', 'INMB', 'INMD', 'INNV', 'INO', 'INOD', 'INSE', 'INSG', 'INSM', 'INTA', 'INTC', 'INTE', 'INTEU', 'INTEW', 'INTG', 'INTJ', 'INTR', 'INTS', 'INTU', 'INTZ', 'INVA', 'INVE', 'INVO', 'INVZ', 'INVZW', 'INZY', 'IOBT', 'IONR', 'IONS', 'IOSP', 'IOVA', 'IPA', 'IPAR', 'IPDN', 'IPGP', 'IPHA', 'IPSC', 'IPW', 'IPWR', 'IPX', 'IPXX', 'IPXXW', 'IQ', 'IRAA', 'IRAAU', 'IRBT', 'IRDM', 'IREN', 'IRIX', 'IRMD', 'IROH', 'IROHR', 'IROHU', 'IROHW', 'IRON', 'IROQ', 'IRTC', 'IRWD', 'ISPC', 'ISPO', 'ISPOW', 'ISPR', 'ISRG', 'ISRL', 'ISRLU', 'ISRLW', 'ISSC', 'ISTR', 'ITCI', 'ITI', 'ITIC', 'ITOS', 'ITRI', 'ITRM', 'ITRN', 'IVA', 'IVAC', 'IVCA', 'IVCAU', 'IVCAW', 'IVCB', 'IVCP', 'IVDA', 'IVDAW', 'IVP', 'IVVD', 'IXAQ', 'IXAQW', 'IXHL', 'IZEA', 'IZM', 'JACK', 'JAGX', 'JAKK', 'JAMF', 'JANX', 'JAZZ', 'JBDI', 'JBHT', 'JBLU', 'JBSS', 'JCSE', 'JCTCF', 'JD', 'JDZG', 'JEWL', 'JFBR', 'JFIN', 'JFU', 'JG', 'JJSF', 'JKHY', 'JL', 'JMSB', 'JNVR', 'JOUT', 'JRSH', 'JRVR', 'JSM', 'JSPR', 'JSPRW', 'JTAI', 'JTAIW', 'JTAIZ', 'JUNE', 'JVA', 'JVSA', 'JVSAU', 'JWEL', 'JXJT', 'JYD', 'JYNT', 'JZ', 'JZXN', 'KA', 'KACL', 'KALA', 'KALU', 'KALV', 'KARO', 'KAVL', 'KC', 'KDLY', 'KDLYW', 'KDP', 'KE', 'KELYA', 'KELYB', 'KEQU', 'KFFB', 'KGEI', 'KHC', 'KIDS', 'KINS', 'KIRK', 'KITT', 'KITTW', 'KLAC', 'KLIC', 'KLTR', 'KLXE', 'KMDA', 'KNDI', 'KNSA', 'KOD', 'KOPN', 'KOSS', 'KPLT', 'KPLTW', 'KPRX', 'KPTI', 'KRKR', 'KRMD', 'KRNT', 'KRNY', 'KRON', 'KROS', 'KRRO', 'KRT', 'KRUS', 'KRYS', 'KSCP', 'KSPI', 'KTCC', 'KTOS', 'KTRA', 'KTTA', 'KURA', 'KVAC', 'KVACU', 'KVACW', 'KVHI', 'KWE', 'KWESW', 'KXIN', 'KYMR', 'KYTX', 'KZIA', 'KZR', 'LAB', 'LAES', 'LAKE', 'LAMR', 'LANC', 'LAND', 'LANDM', 'LANDO', 'LANDP', 'LARK', 'LASE', 'LASR', 'LATG', 'LATGU', 'LAUR', 'LAZR', 'LBPH', 'LBRDA', 'LBRDK', 'LBRDP', 'LBTYA', 'LBTYB', 'LBTYK', 'LCFY', 'LCFYW', 'LCID', 'LCNB', 'LCUT', 'LCW', 'LDTC', 'LDTCW', 'LDWY', 'LE', 'LECO', 'LEDS', 'LEE', 'LEGH', 'LEGN', 'LENZ', 'LESL', 'LEXX', 'LEXXW', 'LFCR', 'LFLY', 'LFLYW', 'LFMD', 'LFMDP', 'LFST', 'LFUS', 'LFVN', 'LFWD', 'LGCB', 'LGCL', 'LGHL', 'LGHLW', 'LGIH', 'LGMK', 'LGND', 'LGO', 'LGVN', 'LI', 'LICN', 'LIDR', 'LIDRW', 'LIF', 'LIFW', 'LIFWW', 'LIFWZ', 'LILA', 'LILAK', 'LILM', 'LILMW', 'LIN', 'LINC', 'LIND', 'LINE', 'LINK', 'LION', 'LIPO', 'LIQT', 'LITE', 'LITM', 'LIVE', 'LIVN', 'LIXT', 'LIXTW', 'LKCO', 'LKFN', 'LKQ', 'LLYVA', 'LLYVK', 'LMAT', 'LMB', 'LMFA', 'LMNR', 'LNKB', 'LNSR', 'LNT', 'LNTH', 'LNW', 'LNZA', 'LNZAW', 'LOAN', 'LOBO', 'LOCO', 'LOGC', 'LOGI', 'LOOP', 'LOPE', 'LOT', 'LOVE', 'LPAA', 'LPAAU', 'LPAAW', 'LPCN', 'LPLA', 'LPRO', 'LPSN', 'LPTH', 'LPTX', 'LQDA', 'LQDT', 'LQR', 'LRCX', 'LRE', 'LRFC', 'LRHC', 'LRMR', 'LSAK', 'LSB', 'LSBK', 'LSBPW', 'LSCC', 'LSEA', 'LSEAW', 'LSH', 'LSTA', 'LSTR', 'LSXMA', 'LSXMB', 'LSXMK', 'LTBR', 'LTRN', 'LTRX', 'LTRY', 'LTRYW', 'LUCD', 'LUCY', 'LUCYW', 'LULU', 'LUMO', 'LUNA', 'LUNG', 'LUNR', 'LUNRW', 'LUXH', 'LUXHP', 'LVLU', 'LVO', 'LVRO', 'LVROW', 'LVTX', 'LWAY', 'LWLG', 'LX', 'LXEH', 'LXEO', 'LXRX', 'LYEL', 'LYFT', 'LYRA', 'LYT', 'LYTS', 'LZ', 'MACI', 'MACIW', 'MAMA', 'MAMO', 'MANH', 'MAPS', 'MAPSW', 'MAR', 'MARA', 'MARPS', 'MARX', 'MARXR', 'MARXU', 'MASI', 'MASS', 'MAT', 'MATH', 'MATW', 'MAXN', 'MAYS', 'MBAVU', 'MBCN', 'MBIN', 'MBINM', 'MBINN', 'MBINO', 'MBIO', 'MBLY', 'MBNKP', 'MBOT', 'MBRX', 'MBUU', 'MBWM', 'MCAA', 'MCAAW', 'MCAG', 'MCAGR', 'MCAGU', 'MCBS', 'MCFT', 'MCHP', 'MCHX', 'MCRB', 'MCRI', 'MCVT', 'MDAI', 'MDAIW', 'MDB', 'MDBH', 'MDGL', 'MDIA', 'MDJH', 'MDLZ', 'MDRR', 'MDRRP', 'MDWD', 'MDXG', 'MDXH', 'ME', 'MEDP', 'MEDS', 'MEGL', 'MEIP', 'MELI', 'MEOH', 'MERC', 'MESA', 'MESO', 'META', 'METC', 'METCB', 'METCL', 'MFH', 'MFI', 'MFIC', 'MFICL', 'MFIN', 'MGEE', 'MGIC', 'MGIH', 'MGNI', 'MGNX', 'MGOL', 'MGPI', 'MGRC', 'MGRM', 'MGRX', 'MGTX', 'MGX', 'MGYR', 'MHLD', 'MHUA', 'MICS', 'MIDD', 'MIGI', 'MIND', 'MINDP', 'MIRA', 'MIRM', 'MIST', 'MITA', 'MITAU', 'MITK', 'MKDW', 'MKDWW', 'MKSI', 'MKTW', 'MKTX', 'MLAB', 'MLCO', 'MLEC', 'MLECW', 'MLGO', 'MLKN', 'MLTX', 'MLYS', 'MMLP', 'MMSI', 'MMV', 'MMVWW', 'MMYT', 'MNDO', 'MNDR', 'MNDY', 'MNKD', 'MNMD', 'MNOV', 'MNPR', 'MNRO', 'MNSB', 'MNSBP', 'MNST', 'MNTK', 'MNTS', 'MNTSW', 'MNTX', 'MNY', 'MNYWW', 'MOB', 'MOBBW', 'MOBX', 'MODD', 'MODV', 'MOFG', 'MOGO', 'MOLN', 'MOMO', 'MOND', 'MORN', 'MOVE', 'MPAA', 'MPB', 'MPWR', 'MQ', 'MRAM', 'MRBK', 'MRCC', 'MRCY', 'MREO', 'MRIN', 'MRKR', 'MRM', 'MRNA', 'MRNO', 'MRNOW', 'MRNS', 'MRSN', 'MRTN', 'MRUS', 'MRVI', 'MRVL', 'MRX', 'MSAI', 'MSAIW', 'MSBI', 'MSBIP', 'MSEX', 'MSFT', 'MSGM', 'MSS', 'MSSA', 'MSSAR', 'MSSAW', 'MSTR', 'MTC', 'MTCH', 'MTEK', 'MTEKW', 'MTEM', 'MTEN', 'MTEX', 'MTLS', 'MTRX', 'MTSI', 'MTTR', 'MU', 'MULN', 'MURA', 'MVBF', 'MVIS', 'MVST', 'MVSTW', 'MXCT', 'MXL', 'MYFW', 'MYGN', 'MYNA', 'MYNZ', 'MYPS', 'MYPSW', 'MYRG', 'MYSZ', 'NA', 'NAAS', 'NAII', 'NAMS', 'NAMSW', 'NAOV', 'NARI', 'NATH', 'NATR', 'NAUT', 'NAVI', 'NB', 'NBBK', 'NBIX', 'NBN', 'NBST', 'NBTB', 'NBTX', 'NCI', 'NCMI', 'NCNA', 'NCNC', 'NCNO', 'NCPL', 'NCPLW', 'NCRA', 'NCSM', 'NCTY', 'NDAQ', 'NDLS', 'NDRA', 'NDSN', 'NECB', 'NEGG', 'NEO', 'NEOG', 'NEON', 'NEOV', 'NEOVW', 'NEPH', 'NERV', 'NETD', 'NETDU', 'NEWT', 'NEWTG', 'NEWTI', 'NEWTZ', 'NEXN', 'NEXT', 'NFBK', 'NFE', 'NFLX', 'NGNE', 'NHTC', 'NICE', 'NICK', 'NIOBW', 'NIPG', 'NISN', 'NITO', 'NIU', 'NIVF', 'NIVFW', 'NKGN', 'NKGNW', 'NKLA', 'NKSH', 'NKTR', 'NKTX', 'NLSP', 'NLSPW', 'NMFC', 'NMFCZ', 'NMHI', 'NMIH', 'NMRA', 'NMRK', 'NMTC', 'NN', 'NNAG', 'NNAGR', 'NNAGU', 'NNAVW', 'NNBR', 'NNDM', 'NNE', 'NNOX', 'NODK', 'NOTV', 'NOVT', 'NOVV', 'NOVVR', 'NOVVW', 'NPAB', 'NPABU', 'NPABW', 'NPCE', 'NRBO', 'NRC', 'NRDS', 'NRIM', 'NRIX', 'NRSN', 'NRSNW', 'NRXP', 'NRXPW', 'NSIT', 'NSPR', 'NSSC', 'NSTS', 'NSYS', 'NTAP', 'NTBL', 'NTCT', 'NTES', 'NTGR', 'NTIC', 'NTLA', 'NTNX', 'NTRA', 'NTRB', 'NTRBW', 'NTRP', 'NTRS', 'NTRSO', 'NTWK', 'NUKK', 'NUKKW', 'NURO', 'NUTX', 'NUVL', 'NUWE', 'NUZE', 'NVA', 'NVAC', 'NVACR', 'NVAWW', 'NVAX', 'NVCR', 'NVCT', 'NVDA', 'NVEC', 'NVEE', 'NVEI', 'NVFY', 'NVMI', 'NVNI', 'NVNIW', 'NVNO', 'NVOS', 'NVTS', 'NVVE', 'NVVEW', 'NVX', 'NWBI', 'NWE', 'NWFL', 'NWGL', 'NWL', 'NWPX', 'NWS', 'NWSA', 'NWTN', 'NWTNW', 'NXGL', 'NXGLW', 'NXL', 'NXLIW', 'NXPI', 'NXPL', 'NXPLW', 'NXST', 'NXT', 'NXTC', 'NXTT', 'NXU', 'NYAX', 'NYMT', 'NYMTI', 'NYMTL', 'NYMTM', 'NYMTN', 'NYMTZ', 'NYXH', 'OABI', 'OAKU', 'OAKUR', 'OAKUW', 'OB', 'OBIO', 'OBLG', 'OBT', 'OCC', 'OCCI', 'OCCIN', 'OCCIO', 'OCEA', 'OCEAW', 'OCFC', 'OCFCP', 'OCG', 'OCGN', 'OCS', 'OCSAW', 'OCSL', 'OCTO', 'OCUL', 'OCUP', 'OCX', 'ODD', 'ODFL', 'ODP', 'ODVWZ', 'OESX', 'OFIX', 'OFLX', 'OFS', 'OFSSH', 'OGI', 'OKTA', 'OKYO', 'OLB', 'OLED', 'OLLI', 'OLMA', 'OLPX', 'OM', 'OMAB', 'OMCL', 'OMER', 'OMEX', 'OMGA', 'OMH', 'OMIC', 'ON', 'ONB', 'ONBPO', 'ONBPP', 'ONCO', 'ONCT', 'ONCY', 'ONDS', 'ONEW', 'ONFO', 'ONFOW', 'ONMD', 'ONMDW', 'ONVO', 'ONYX', 'OP', 'OPAL', 'OPBK', 'OPCH', 'OPEN', 'OPHC', 'OPI', 'OPINL', 'OPK', 'OPOF', 'OPRA', 'OPRT', 'OPRX', 'OPT', 'OPTN', 'OPTX', 'OPTXW', 'OPXS', 'ORGN', 'ORGNW', 'ORGO', 'ORGS', 'ORIC', 'ORKA', 'ORKT', 'ORLY', 'ORMP', 'ORRF', 'OS', 'OSBC', 'OSIS', 'OSPN', 'OSS', 'OST', 'OSUR', 'OSW', 'OTEX', 'OTLK', 'OTLY', 'OTRK', 'OTTR', 'OVBC', 'OVID', 'OVLY', 'OXBR', 'OXLC', 'OXLCI', 'OXLCL', 'OXLCN', 'OXLCO', 'OXLCP', 'OXLCZ', 'OXSQ', 'OXSQG', 'OXSQZ', 'OZK', 'OZKAP', 'PAA', 'PACB', 'PAGP', 'PAHC', 'PAL', 'PALI', 'PALT', 'PANL', 'PANW', 'PARA', 'PARAA', 'PASG', 'PATK', 'PAVM', 'PAVMZ', 'PAVS', 'PAX', 'PAYO', 'PAYOW', 'PAYS', 'PAYX', 'PBBK', 'PBFS', 'PBHC', 'PBM', 'PBMWW', 'PBPB', 'PBYI', 'PCAR', 'PCB', 'PCH', 'PCRX', 'PCSA', 'PCSC', 'PCT', 'PCTTU', 'PCTTW', 'PCTY', 'PCVX', 'PCYO', 'PDCO', 'PDD', 'PDEX', 'PDFS', 'PDLB', 'PDSB', 'PDYN', 'PDYNW', 'PEBK', 'PEBO', 'PECO', 'PEGA', 'PEGY', 'PENN', 'PEP', 'PEPG', 'PERI', 'PESI', 'PET', 'PETQ', 'PETS', 'PETWW', 'PETZ', 'PEV', 'PFBC', 'PFC', 'PFG', 'PFIE', 'PFIS', 'PFMT', 'PFTA', 'PFTAU', 'PFX', 'PFXNZ', 'PGC', 'PGEN', 'PGHL', 'PGNY', 'PGY', 'PGYWW', 'PHAR', 'PHAT', 'PHIO', 'PHUN', 'PHVS', 'PI', 'PIII', 'PIIIW', 'PIK', 'PINC', 'PIRS', 'PITA', 'PITAW', 'PIXY', 'PKBK', 'PKOH', 'PLAB', 'PLAO', 'PLAOW', 'PLAY', 'PLBC', 'PLBY', 'PLCE', 'PLL', 'PLMI', 'PLMIW', 'PLMJ', 'PLMJU', 'PLMJW', 'PLMR', 'PLPC', 'PLRX', 'PLSE', 'PLTK', 'PLUG', 'PLUR', 'PLUS', 'PLXS', 'PLYA', 'PMCB', 'PMD', 'PMEC', 'PMN', 'PMTS', 'PMVP', 'PNBK', 'PNFP', 'PNFPP', 'PNRG', 'PNTG', 'POAI', 'POCI', 'PODC', 'PODD', 'POET', 'POLA', 'POOL', 'POWI', 'POWL', 'POWW', 'POWWP', 'PPBI', 'PPBT', 'PPC', 'PPIH', 'PPSI', 'PPTA', 'PPYA', 'PPYAU', 'PPYAW', 'PRAA', 'PRAX', 'PRCH', 'PRCT', 'PRDO', 'PRE', 'PRENW', 'PRFT', 'PRFX', 'PRGS', 'PRLD', 'PRLH', 'PRLHW', 'PRME', 'PROC', 'PROCW', 'PROF', 'PROK', 'PROP', 'PROV', 'PRPH', 'PRPL', 'PRPO', 'PRQR', 'PRSO', 'PRTA', 'PRTC', 'PRTG', 'PRTH', 'PRTS', 'PRVA', 'PRZO', 'PSEC', 'PSHG', 'PSIG', 'PSMT', 'PSNL', 'PSNY', 'PSNYW', 'PSTV', 'PSTX', 'PT', 'PTC', 'PTCT', 'PTEN', 'PTGX', 'PTIX', 'PTLO', 'PTMN', 'PTON', 'PTPI', 'PTSI', 'PTVE', 'PTWO', 'PTWOU', 'PTWOW', 'PUBM', 'PULM', 'PVBC', 'PWM', 'PWOD', 'PWP', 'PWUP', 'PWUPU', 'PWUPW', 'PXDT', 'PXLW', 'PXS', 'PXSAP', 'PXSAW', 'PYCR', 'PYPD', 'PYPL', 'PYXS', 'PZZA', 'QCOM', 'QCRH', 'QDEL', 'QETA', 'QFIN', 'QH', 'QIPT', 'QLGN', 'QLYS', 'QMCO', 'QMMM', 'QNCX', 'QNRX', 'QNST', 'QNTM', 'QOMO', 'QOMOW', 'QQQX', 'QRHC', 'QRTEA', 'QRTEB', 'QRTEP', 'QRVO', 'QSG', 'QSI', 'QSIAW', 'QTI', 'QTRX', 'QTTB', 'QUBT', 'QUIK', 'QURE', 'QXO', 'RAIL', 'RAND', 'RANI', 'RAPP', 'RAPT', 'RARE', 'RAVE', 'RAY', 'RAYA', 'RBB', 'RBBN', 'RBCAA', 'RBKB', 'RCAT', 'RCEL', 'RCKT', 'RCKTW', 'RCKY', 'RCM', 'RCMT', 'RCON', 'RCRT', 'RDCM', 'RDFN', 'RDHL', 'RDI', 'RDIB', 'RDNT', 'RDUS', 'RDVT', 'RDWR', 'RDZN', 'RDZNW', 'REAL', 'REAX', 'REBN', 'RECT', 'REE', 'REFI', 'REFR', 'REG', 'REGCO', 'REGCP', 'REGN', 'REKR', 'RELI', 'RELIW', 'RELL', 'RELY', 'RENB', 'RENE', 'RENEW', 'RENT', 'REPL', 'RETO', 'REVB', 'REVBW', 'REYN', 'RFAC', 'RFACU', 'RFAI', 'RFAIR', 'RFAIU', 'RFIL', 'RGC', 'RGCO', 'RGEN', 'RGF', 'RGLD', 'RGLS', 'RGNX', 'RGP', 'RGS', 'RGTI', 'RGTIW', 'RICK', 'RIGL', 'RILY', 'RILYG', 'RILYK', 'RILYL', 'RILYM', 'RILYN', 'RILYP', 'RILYT', 'RILYZ', 'RIOT', 'RITR', 'RIVN', 'RKDA', 'RKLB', 'RLAY', 'RLMD', 'RLYB', 'RMBI', 'RMBL', 'RMBS', 'RMCF', 'RMCO', 'RMCOW', 'RMNI', 'RMR', 'RMTI', 'RNA', 'RNAC', 'RNAZ', 'RNLX', 'RNW', 'RNWWW', 'RNXT', 'ROAD', 'ROCK', 'ROCL', 'ROCLW', 'ROIC', 'ROIV', 'ROKU', 'ROMA', 'ROOT', 'ROP', 'ROST', 'RPAY', 'RPD', 'RPHM', 'RPID', 'RPRX', 'RPTX', 'RR', 'RRBI', 'RRGB', 'RRR', 'RSLS', 'RSSS', 'RSVR', 'RSVRW', 'RTC', 'RUM', 'RUMBW', 'RUN', 'RUSHA', 'RUSHB', 'RVMD', 'RVMDW', 'RVNC', 'RVPH', 'RVPHW', 'RVSB', 'RVSN', 'RVYL', 'RWAY', 'RWAYL', 'RWAYZ', 'RXRX', 'RXST', 'RXT', 'RYAAY', 'RYTM', 'RZLT', 'RZLV', 'RZLVW', 'SABR', 'SABS', 'SAFT', 'SAGE', 'SAI', 'SAIA', 'SAIC', 'SAITW', 'SAMG', 'SANA', 'SANG', 'SANM', 'SANW', 'SASR', 'SATL', 'SATLW', 'SATS', 'SAVA', 'SBAC', 'SBCF', 'SBET', 'SBFG', 'SBFM', 'SBFMW', 'SBGI', 'SBLK', 'SBRA', 'SBSI', 'SBT', 'SBUX', 'SCHL', 'SCKT', 'SCLX', 'SCLXW', 'SCNI', 'SCOR', 'SCPH', 'SCSC', 'SCVL', 'SCWO', 'SCWX', 'SCYX', 'SDA', 'SDAWW', 'SDGR', 'SDIG', 'SDOT', 'SDST', 'SDSTW', 'SEAT', 'SEATW', 'SEDG', 'SEED', 'SEEL', 'SEER', 'SEIC', 'SELF', 'SELX', 'SENEA', 'SENEB', 'SERA', 'SERV', 'SEVN', 'SEZL', 'SFBC', 'SFIX', 'SFM', 'SFNC', 'SFST', 'SFWL', 'SGA', 'SGBX', 'SGC', 'SGD', 'SGH', 'SGHT', 'SGLY', 'SGMA', 'SGML', 'SGMO', 'SGMT', 'SGRP', 'SGRY', 'SHBI', 'SHC', 'SHCR', 'SHCRW', 'SHEN', 'SHFS', 'SHFSW', 'SHIM', 'SHIP', 'SHLS', 'SHLT', 'SHMD', 'SHMDW', 'SHOO', 'SHOT', 'SHOTW', 'SHPH', 'SHYF', 'SIBN', 'SIDU', 'SIEB', 'SIFY', 'SIGA', 'SIGI', 'SIGIP', 'SILC', 'SILK', 'SILO', 'SIMA', 'SIMAU', 'SIMAW', 'SIMO', 'SINT', 'SIRI', 'SISI', 'SITM', 'SJ', 'SKGR', 'SKGRW', 'SKIN', 'SKWD', 'SKYE', 'SKYT', 'SKYW', 'SKYX', 'SLAB', 'SLDB', 'SLDP', 'SLDPW', 'SLE', 'SLGL', 'SLM', 'SLMBP', 'SLN', 'SLNG', 'SLNH', 'SLNHP', 'SLNO', 'SLP', 'SLRC', 'SLRN', 'SLRX', 'SLS', 'SLXN', 'SLXNW', 'SMBC', 'SMCI', 'SMFL', 'SMID', 'SMLR', 'SMMT', 'SMPL', 'SMSI', 'SMTC', 'SMTI', 'SMTK', 'SMX', 'SMXT', 'SMXWW', 'SNAL', 'SNAX', 'SNAXW', 'SNBR', 'SNCR', 'SNCRL', 'SNCY', 'SND', 'SNDL', 'SNDX', 'SNES', 'SNEX', 'SNFCA', 'SNGX', 'SNOA', 'SNPS', 'SNPX', 'SNSE', 'SNT', 'SNTG', 'SNTI', 'SNY', 'SOBR', 'SOFI', 'SOGP', 'SOHO', 'SOHOB', 'SOHON', 'SOHOO', 'SOHU', 'SOND', 'SONDW', 'SONM', 'SONN', 'SONO', 'SOPA', 'SOPH', 'SOTK', 'SOUN', 'SOUNW', 'SOWG', 'SPAI', 'SPCB', 'SPFI', 'SPGC', 'SPI', 'SPKL', 'SPNS', 'SPOK', 'SPPL', 'SPRB', 'SPRC', 'SPRO', 'SPRY', 'SPSC', 'SPT', 'SPTN', 'SPWH', 'SQFT', 'SQFTP', 'SQFTW', 'SRAD', 'SRBK', 'SRCE', 'SRCL', 'SRDX', 'SRM', 'SRPT', 'SRRK', 'SRTS', 'SRZN', 'SRZNW', 'SSBI', 'SSBK', 'SSIC', 'SSKN', 'SSNC', 'SSP', 'SSRM', 'SSSS', 'SSSSL', 'SSTI', 'SSYS', 'STAA', 'STAF', 'STBA', 'STBX', 'STCN', 'STEC', 'STEP', 'STER', 'STGW', 'STHO', 'STI', 'STIM', 'STKH', 'STKL', 'STKS', 'STLD', 'STNE', 'STOK', 'STRA', 'STRL', 'STRM', 'STRO', 'STRR', 'STRRP', 'STRS', 'STRT', 'STSS', 'STSSW', 'STTK', 'STX', 'SUGP', 'SUNS', 'SUPN', 'SURG', 'SURGW', 'SUUN', 'SVC', 'SVCO', 'SVII', 'SVIIU', 'SVMH', 'SVMHW', 'SVRA', 'SVRE', 'SWAG', 'SWBI', 'SWIM', 'SWIN', 'SWKH', 'SWKHL', 'SWKS', 'SWTX', 'SWVL', 'SWVLW', 'SXTC', 'SXTP', 'SY', 'SYBT', 'SYBX', 'SYM', 'SYNA', 'SYPR', 'SYRA', 'SYRE', 'SYRS', 'SYT', 'SYTA', 'SYTAW', 'TACT', 'TAIT', 'TALK', 'TALKW', 'TANH', 'TAOP', 'TARA', 'TARS', 'TASK', 'TATT', 'TAYD', 'TBBK', 'TBIO', 'TBLA', 'TBLAW', 'TBLD', 'TBMC', 'TBMCR', 'TBNK', 'TBPH', 'TBRG', 'TC', 'TCBI', 'TCBIO', 'TCBK', 'TCBP', 'TCBPW', 'TCBS', 'TCBX', 'TCJH', 'TCMD', 'TCOM', 'TCPC', 'TCRT', 'TCRX', 'TCTM', 'TCX', 'TDUP', 'TEAM', 'TECH', 'TECTP', 'TECX', 'TELA', 'TELO', 'TEM', 'TENB', 'TENX', 'TER', 'TERN', 'TETE', 'TETEU', 'TFFP', 'TFIN', 'TFINP', 'TFSL', 'TGAA', 'TGL', 'TGTX', 'TH', 'THAR', 'THCH', 'THCP', 'THFF', 'THRD', 'THRM', 'THRY', 'THTX', 'TIGO', 'TIGR', 'TIL', 'TILE', 'TIPT', 'TIRX', 'TITN', 'TIVC', 'TKLF', 'TKNO', 'TLF', 'TLGY', 'TLGYU', 'TLN', 'TLPH', 'TLRY', 'TLS', 'TLSA', 'TLSI', 'TLSIW', 'TMC', 'TMCI', 'TMCWW', 'TMDX', 'TMTC', 'TMUS', 'TNDM', 'TNFA', 'TNGX', 'TNON', 'TNONW', 'TNXP', 'TNYA', 'TOI', 'TOIIW', 'TOMZ', 'TOP', 'TORO', 'TOUR', 'TOWN', 'TOYO', 'TPCS', 'TPG', 'TPGXL', 'TPIC', 'TPST', 'TRAW', 'TRDA', 'TREE', 'TRIB', 'TRIN', 'TRINI', 'TRINL', 'TRINZ', 'TRIP', 'TRMB', 'TRMD', 'TRMK', 'TRML', 'TRNR', 'TRNS', 'TROO', 'TROW', 'TRS', 'TRSG', 'TRST', 'TRUE', 'TRUG', 'TRUP', 'TRVG', 'TRVI', 'TRVN', 'TSAT', 'TSBK', 'TSBX', 'TSCO', 'TSEM', 'TSHA', 'TSLA', 'TSVT', 'TTD', 'TTEC', 'TTEK', 'TTGT', 'TTMI', 'TTNP', 'TTOO', 'TTSH', 'TTWO', 'TURB', 'TURN', 'TUSK', 'TVGN', 'TVGNW', 'TVTX', 'TW', 'TWFG', 'TWG', 'TWIN', 'TWKS', 'TWST', 'TXG', 'TXMD', 'TXN', 'TXRH', 'TYGO', 'TYRA', 'TZOO', 'UAL', 'UBCP', 'UBFO', 'UBSI', 'UBX', 'UBXG', 'UCAR', 'UCL', 'UCTT', 'UDMY', 'UEIC', 'UFCS', 'UFPI', 'UFPT', 'UG', 'UGRO', 'UHG', 'UHGWW', 'UK', 'UKOMW', 'ULBI', 'ULCC', 'ULH', 'ULTA', 'ULY', 'UMBF', 'UNB', 'UNCY', 'UNIT', 'UNTY', 'UONE', 'UONEK', 'UPBD', 'UPC', 'UPLD', 'UPST', 'UPWK', 'UPXI', 'URBN', 'URGN', 'UROY', 'USAP', 'USAU', 'USCB', 'USEA', 'USEG', 'USGO', 'USGOW', 'USIO', 'USLM', 'UTHR', 'UTMD', 'UTSI', 'UVSP', 'UXIN', 'VABK', 'VACHU', 'VALN', 'VALU', 'VANI', 'VBFC', 'VBNK', 'VBTX', 'VC', 'VCEL', 'VCIG', 'VCNX', 'VCSA', 'VCTR', 'VCYT', 'VECO', 'VEEE', 'VEON', 'VERA', 'VERB', 'VERI', 'VERO', 'VERU', 'VERV', 'VERX', 'VEV', 'VFF', 'VFS', 'VFSWW', 'VGAS', 'VGASW', 'VIASP', 'VIAV', 'VICR', 'VIGL', 'VINC', 'VINO', 'VINP', 'VIOT', 'VIR', 'VIRC', 'VIRI', 'VIRT', 'VIRX', 'VISL', 'VITL', 'VIVK', 'VKTX', 'VLCN', 'VLGEA', 'VLY', 'VLYPN', 'VLYPO', 'VLYPP', 'VMAR', 'VMCA', 'VMD', 'VMEO', 'VNDA', 'VNET', 'VNOM', 'VOD', 'VOR', 'VOXR', 'VOXX', 'VRA', 'VRAR', 'VRAX', 'VRCA', 'VRDN', 'VREX', 'VRM', 'VRME', 'VRNA', 'VRNS', 'VRNT', 'VRPX', 'VRRM', 'VRSK', 'VRSN', 'VRTX', 'VS', 'VSAC', 'VSACU', 'VSACW', 'VSAT', 'VSEC', 'VSEE', 'VSEEW', 'VSME', 'VSSYW', 'VSTA', 'VSTE', 'VSTEW', 'VSTM', 'VTGN', 'VTNR', 'VTRS', 'VTSI', 'VTVT', 'VTYX', 'VUZI', 'VVOS', 'VVPR', 'VXRT', 'VYGR', 'VYNE', 'WABC', 'WAFD', 'WAFDP', 'WAFU', 'WALD', 'WALDW', 'WASH', 'WATT', 'WAVE', 'WAVS', 'WAY', 'WB', 'WBA', 'WBD', 'WBTN', 'WBUY', 'WDAY', 'WDC', 'WDFC', 'WEN', 'WENA', 'WENAW', 'WERN', 'WEST', 'WESTW', 'WETH', 'WEYS', 'WFCF', 'WFRD', 'WGS', 'WGSWW', 'WHF', 'WHFCL', 'WHLM', 'WHLR', 'WHLRD', 'WHLRL', 'WHLRP', 'WILC', 'WIMI', 'WINA', 'WING', 'WINT', 'WINV', 'WINVR', 'WISA', 'WIX', 'WKEY', 'WKHS', 'WKME', 'WKSP', 'WLDN', 'WLDS', 'WLDSW', 'WLFC', 'WLGS', 'WMG', 'WMPN', 'WNEB', 'WNW', 'WOK', 'WOOF', 'WORX', 'WPRT', 'WRAP', 'WRLD', 'WSBC', 'WSBCP', 'WSBF', 'WSC', 'WSFS', 'WTBA', 'WTFC', 'WTFCM', 'WTFCP', 'WTMA', 'WTMAR', 'WTO', 'WTW', 'WULF', 'WVE', 'WVVI', 'WVVIP', 'WW', 'WWD', 'WYNN', 'XAIR', 'XBIO', 'XBIT', 'XBP', 'XBPEW', 'XCUR', 'XEL', 'XELA', 'XELAP', 'XELB', 'XENE', 'XERS', 'XFIN', 'XFINW', 'XFOR', 'XGN', 'XHG', 'XLO', 'XMTR', 'XNCR', 'XNET', 'XOMA', 'XOMAO', 'XOMAP', 'XOS', 'XOSWW', 'XP', 'XPEL', 'XPON', 'XRAY', 'XRTX', 'XRX', 'XTIA', 'XTKG', 'XTLB', 'XWEL', 'XXII', 'XYLO', 'YGMZ', 'YHGJ', 'YI', 'YIBO', 'YJ', 'YMAB', 'YORW', 'YOSH', 'YOTA', 'YOTAR', 'YOTAU', 'YQ', 'YTRA', 'YXT', 'YY', 'YYAI', 'YYGH', 'Z', 'ZAPP', 'ZAPPW', 'ZBAO', 'ZBRA', 'ZCAR', 'ZCARW', 'ZCMD', 'ZD', 'ZENV', 'ZEO', 'ZEUS', 'ZG', 'ZI', 'ZIMV', 'ZION', 'ZIONL', 'ZIONO', 'ZIONP', 'ZJYL', 'ZKIN', 'ZLAB', 'ZM', 'ZNTL', 'ZOOZ', 'ZOOZW', 'ZPTA', 'ZPTAW', 'ZS', 'ZTEK', 'ZUMZ', 'ZURA', 'ZVRA', 'ZVSA', 'ZYME', 'ZYXI']);\r\n  return tickers.has(msg.toUpperCase());\r\n}\r\n\r\nfunction isSubSequence(s1, s2, m, n)\r\n{\r\n    \r\n    // Base Cases\r\n    if (m == 0)\r\n        return true;\r\n    if (n == 0)\r\n        return false;\r\n         \r\n    // If last characters of two strings\r\n    // are matching\r\n    if (s1[m - 1] == s2[n - 1])\r\n        return isSubSequence(s1, s2,\r\n                             m - 1, n - 1);\r\n\r\n    // If last characters are not matching\r\n    return isSubSequence(s1, s2, m, n - 1);\r\n}\r\n\r\nfunction periodicSentence(text) {\r\n  let output = {\r\n    'html': '',\r\n    'flags': Array(text.length).fill(0, 0),\r\n    'elements': {}\r\n  };\r\n\r\n  let Elements = {\r\n     'H': 'Hydrogen',     'He': 'Helium',        'Li': 'Lithium',\r\n    'Be': 'Beryllium',     'B': 'Boron',          'C': 'Carbon',\r\n     'N': 'Nitrogen',      'O': 'Oxygen',         'F': 'Fluorine',\r\n    'Ne': 'Neon',         'Na': 'Sodium',        'Mg': 'Magnesium',\r\n    'Al': 'Aluminium',    'Si': 'Silicon',        'P': 'Phosphorus',\r\n     'S': 'Sulfur',       'Cl': 'Chlorine',      'Ar': 'Argon',\r\n     'K': 'Potassium',    'Ca': 'Calcium',       'Sc': 'Scandium',\r\n    'Ti': 'Titanium',      'V': 'Vanadium',      'Cr': 'Chromium',\r\n    'Mn': 'Manganese',    'Fe': 'Iron',          'Co': 'Cobalt',\r\n    'Ni': 'Nickel',       'Cu': 'Copper',        'Zn': 'Zinc',\r\n    'Ga': 'Gallium',      'Ge': 'Germanium',     'As': 'Arsenic',\r\n    'Se': 'Selenium',     'Br': 'Bromine',       'Kr': 'Krypton',\r\n    'Rb': 'Rubidium',     'Sr': 'Strontium',      'Y': 'Yttrium',\r\n    'Zr': 'Zirconium',    'Nb': 'Niobium',       'Mo': 'Molybdenum',\r\n    'Tc': 'Technetium',   'Ru': 'Ruthenium',     'Rh': 'Rhodium',\r\n    'Pd': 'Palladium',    'Ag': 'Silver',        'Cd': 'Cadmium',\r\n    'In': 'Indium',       'Sn': 'Tin',           'Sb': 'Antimony',\r\n    'Te': 'Tellurium',     'I': 'Iodine',        'Xe': 'Xenon',\r\n    'Cs': 'Cesium',       'Ba': 'Barium',        'La': 'Lanthanum',\r\n    'Ce': 'Cerium',       'Pr': 'Praseodymium',  'Nd': 'Neodymium',\r\n    'Pm': 'Promethium',   'Sm': 'Samarium',      'Eu': 'Europium',\r\n    'Gd': 'Gadolinium',   'Tb': 'Terbium',       'Dy': 'Dysprosium',\r\n    'Ho': 'Holmium',      'Er': 'Erbium',        'Tm': 'Thulium',\r\n    'Yb': 'Ytterbium',    'Lu': 'Lutetium',      'Hf': 'Hafnium',\r\n    'Ta': 'Tantalum',      'W': 'Tungsten',      'Re': 'Rhenium',\r\n    'Os': 'Osmium',       'Ir': 'Iridium',       'Pt': 'Platinum',\r\n    'Au': 'Gold',         'Hg': 'Mercury',       'Tl': 'Thallium',\r\n    'Pb': 'Lead',         'Bi': 'Bismuth',       'Po': 'Polonium',\r\n    'At': 'Astatine',     'Rn': 'Radon',         'Fr': 'Francium',\r\n    'Ra': 'Radium',       'Ac': 'Actinium',      'Th': 'Thorium',\r\n    'Pa': 'Protactinium',  'U': 'Uranium',       'Np': 'Neptunium',\r\n    'Pu': 'Plutonium',    'Am': 'Americium',     'Cm': 'Curium',\r\n    'Bk': 'Berkelium',    'Cf': 'Californium',   'Es': 'Einsteinium',\r\n    'Fm': 'Fermium',      'Md': 'Mendelevium',   'No': 'Nobelium',\r\n    'Lr': 'Lawrencium',   'Rf': 'Rutherfordium', 'Db': 'Dubnium',\r\n    'Sg': 'Seaborgium',   'Bh': 'Bohrium',       'Hs': 'Hassium',\r\n    'Mt': 'Meitnerium',   'Ds': 'Darmstadtium',  'Rg': 'Roentgenium',\r\n    'Cn': 'Copernicium',  'Nh': 'Nihonium',      'Fl': 'Flerovium',\r\n    'Mc': 'Moscovium',    'Lv': 'Livermorium',   'Ts': 'Tennessine',\r\n    'Og': 'Oganesson'\r\n  };\r\n\r\n  for (let x = 0, bit1, bit2; x < text.length; x++) {\r\n    bit1 = text.substring(x, x + 1).toUpperCase();\r\n\r\n    // If first character is not a letter, skip\r\n    if (!bit1.match(/[A-Z]/)) continue;\r\n\r\n    bit2 = text.substring(x + 1, x + 2).toLowerCase();\r\n\r\n    // Check if next two letters are an element\r\n    if (typeof Elements[bit1 + bit2] != 'undefined') {\r\n\r\n      // If we are backtracking, the previous element letter must\r\n      // succeed as a single letter element\r\n      if (output['flags'][x]) {\r\n        let bit0 = text.substring(x - 1, x).toUpperCase();\r\n        if (typeof Elements[bit0] == 'undefined') {\r\n          x++;\r\n          continue;\r\n        }\r\n      }\r\n      output['flags'][x] = 1;\r\n      output['flags'][x + 1] = 2;\r\n      x++;\r\n\r\n    // We are currently backtracking and didn't find a match\r\n    } else if (output['flags'][x]) {\r\n      x++;\r\n\r\n    // Else check if next single letter is an element\r\n    } else if (typeof Elements[bit1] != 'undefined') {\r\n      output['flags'][x] = 1;\r\n\r\n    // An element was not found; if the previous symbol was a two\r\n    // character match, backtrack to see if breaking it up will help\r\n    } else if (x > 1 && output['flags'][x - 1] == 2) {\r\n      x -= 2;\r\n\r\n    }\r\n  }\r\n\r\n  for (let x = 0, bit1, bit2; x < text.length; x++) {\r\n    bit1 = text.substring(x, x + 1).toUpperCase();\r\n    bit2 = text.substring(x + 1, x + 2).toLowerCase();\r\n\r\n    // Two character elements\r\n    if (output['flags'][x] == 1 && x < text.length - 1 && output['flags'][x + 1] == 2) {\r\n      output['html'] += '<span title=\"' + Elements[bit1 + bit2] + '\">';\r\n      output['html'] += text.substring(x, x + 2);\r\n      output['html'] += '</span>';\r\n      if (typeof output['elements'][bit1 + bit2] == 'undefined') {\r\n        output['elements'][bit1 + bit2] = 1;\r\n      } else output['elements'][bit1 + bit2]++;\r\n      x++;\r\n\r\n    // Single character elements\r\n    } else if (output['flags'][x] == 1) {\r\n      output['html'] += '<span title=\"' + Elements[bit1] + '\">';\r\n      output['html'] += text.substring(x, x + 1);\r\n      output['html'] += '</span>';\r\n      if (typeof output['elements'][bit1] == 'undefined') {\r\n        output['elements'][bit1] = 1;\r\n      } else output['elements'][bit1]++;\r\n\r\n    // Non-matching letter characters\r\n    } else if (bit1.match(/[a-zA-Z]/)) {\r\n      output['html'] += '<del>' + text.substring(x, x + 1) + '</del>';\r\n\r\n    // Sanitise, but otherwise ignore all other output\r\n    } else output['html'] += text.substring(x, x + 1).replace(/</g, '&lt;').replace(/>/g, '&gt;');\r\n  }\r\n\r\n  return !output['flags'].some(x => x === 0);\r\n}\r\n\r\nlet puzzleInfo = [\r\n  {\r\n    puzzleId: 1337,\r\n    name: \"Undefined\",\r\n    points: 0\r\n  }, {\r\n    puzzleId: 1,\r\n    name: \"WHATS MY NAME?\",\r\n    points: 1,\r\n    body: (<div><br/>Hint: Be thorough with your inputs!</div>),\r\n    filter_fn: (msg) => {\r\n      return isSubSequence(\"matt\", msg.toLowerCase(), 4, msg.length)\r\n    },\r\n    answer: \"Message must contain 'matt' as a subsequence\"\r\n  }, {\r\n    puzzleId: 2,\r\n    name: \"Don't @ me\",\r\n    points: 1,\r\n    body: (<div></div>),\r\n    filter_fn: validateEmail,\r\n    answer: \"Must be a valid email\"\r\n  }, {\r\n    puzzleId: 3,\r\n    name: \"A basic test\",\r\n    points: 2,\r\n    body: (<div></div>),\r\n    filter_fn: (msg) => {\r\n      return msg.includes(\"a\") || msg.includes(\"A\");\r\n    },\r\n    answer: \"Must contain the letter 'a'\"\r\n  }, {\r\n\r\n    puzzleId: 4,\r\n    name: \"U-NICK\",\r\n    points: 2,\r\n    body: (<div></div>),\r\n    filter_fn: (msg) => {\r\n      const charCount = msg.split('').reduce((acc, char) => {\r\n        acc[char] = (acc[char] || 0) + 1;\r\n        return acc;\r\n      }, {});\r\n      \r\n      const duplicates = Object.keys(charCount).filter(char => charCount[char] > 1);\r\n      return duplicates.length === 0;\r\n    },\r\n    answer: \"Each valid character may only be used at most once (are unique).\"\r\n  }, {\r\n    puzzleId: 5,\r\n    name: \"2hard4you\",\r\n    points: 2,\r\n    body: (<div><br/>Hint: Try small inputs</div>),\r\n    filter_fn: (msg) => {\r\n      return (Math.log(msg)/Math.log(2)) % 1 === 0;\r\n    },\r\n    answer: \"Message must be a power of 2.\"\r\n  }, {\r\n\r\n    puzzleId: 6,\r\n    name: \"Key Bored\",\r\n    points: 3,\r\n    body: (<div></div>),\r\n    filter_fn: (msg) => {\r\n      return /^(([A-Ga-g]{1})(\\#|b{1})?)+$/.test(msg)\r\n    },\r\n    answer: \"Message must be able to be written as music letter notes (Ex. A#, Cb, etc.)\"\r\n  }, {\r\n    puzzleId: 7,\r\n    name: \"BaNaNaS\",\r\n    points: 4,\r\n    body: (<div></div>),\r\n    filter_fn: periodicSentence,\r\n    answer: \"Message must be able to be written using abbreviations of elements of the Periodic Table of Elements\"\r\n  }, {\r\n    puzzleId: 8,\r\n    name: \"Search and Replace\",\r\n    points: 5,\r\n    body: (<div><br/>Hint: How does search and replace <b>REGULAR</b>ly work?</div>),\r\n    filter_fn: (msg) => {\r\n      var regex = new RegExp(\"^\" + msg + \"$\");\r\n      return regex.test(\"regex\");\r\n    },\r\n    answer: \"Message must be a valid Regex expression (in JS) that fully matches the word 'regex'\"\r\n  }, {\r\n    puzzleId: 9,\r\n    name: \"Legal Name\",\r\n    points: 6,\r\n    body: (<div><br/>Hint: Be thorough with your testing!</div>),\r\n    filter_fn: (msg) => {\r\n      return /^[a-zA-Z_$][\\w$]*$/.test(msg)\r\n    },\r\n    answer: \"Message must be a valid Python variable name.\"\r\n  }, {\r\n    puzzleId: 10,\r\n    name: \"TICK ?TOCK\",\r\n    points: 7,\r\n    body: (<div><br/>Hint: Try small inputs</div>),\r\n    filter_fn: states,\r\n    answer: \"Message must be a NASDAQ stock ticker (no ETFs)\"\r\n  }, {\r\n    puzzleId: 11,\r\n    name: \"Which rows?\",\r\n    points: 8,\r\n    body: (<div><br/>Hint: Be thorough with your testing!</div>),\r\n    filter_fn: (msg) => {\r\n      let row1 = new Set(\"zxcvbnm,./<>?\".split(\"\"));\r\n      let row2 = new Set(`asdfghjkl;':\"'`.split(\"\"));\r\n      let row3 = new Set(\"qwertyuiop[]{}\\\\|\".split(\"\"));\r\n      let row4 = new Set(\"1234567890!@#$%^&*()_+-=`~\".split(\"\"));\r\n\r\n      let prevRow = 0;\r\n      for (var i = 0; i < msg.length; i++) {\r\n        let letter = msg[i].toLowerCase()\r\n        let currRow = 0;\r\n        if (row1.has(letter)) {\r\n          currRow = 1;\r\n        } else if (row2.has(letter)) {\r\n          currRow = 2;\r\n        } else if (row3.has(letter)) {\r\n          currRow = 3;\r\n        } else {\r\n          currRow = 4;\r\n        }\r\n        if (prevRow === currRow) {\r\n          return false;\r\n        }\r\n        prevRow = currRow;\r\n      }\r\n      return true;\r\n    },\r\n    answer: \"The next letter in the message must come from a different row on the keyboard.\"\r\n  }, {\r\n    puzzleId: 12,\r\n    name: \"Never say Never\",\r\n    points: 9,\r\n    body: (<div></div>),\r\n    filter_fn: rrWords,\r\n    answer: \"Message must be a word from Rickroll\"\r\n  }\r\n];\r\n\r\nexport default puzzleInfo;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport styles from './commonStyles.js';\r\nimport puzzleInfo from './puzzleInfo.js';\r\nimport { ThemeContext } from \"./util/config.js\";\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst MAX_PER_COOKIE = 40;\r\nconst COOKIE_SUFFIX = ['a', 'b', 'c', 'd', 'e']\r\nconst MAX_COOKIES = COOKIE_SUFFIX.length;\r\nconst MAX_PUZZLES = 12;\r\n\r\nclass Puzzles extends React.Component {\r\n  static contextType = ThemeContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    // Temporary initial perms\r\n    let permsArray = Array(28); // 0th idx is undefined\r\n    permsArray.fill(-1);\r\n    permsArray[0] = -1337;\r\n    permsArray[1] = -1;\r\n    this.state = {\r\n      perms: permsArray,\r\n      receivedToken: false,\r\n      noTeam: false,\r\n      score: -1\r\n    }\r\n    this.puzzlesList = [...Array(12).keys()].map(x => x + 1)\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.makeRequests();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    this.makeRequests();\r\n  }\r\n\r\n  makeRequests = () => {\r\n    return;\r\n  }\r\n\r\n  sumPerms = (start, end) => {\r\n    let ans = 0;\r\n    for (let i = start; i <= end; i++) {\r\n      ans += this.state.perms[i];\r\n    }\r\n    return ans;\r\n  }\r\n\r\n  numAttempts = () => {\r\n    let attempts = new Array(MAX_PUZZLES + 1).fill(0);\r\n    for (var h = 1; h <= MAX_PUZZLES; h++) {\r\n      let stored_progress = [];\r\n      for (var i = 0; i < MAX_COOKIES; i++) {\r\n        let cookie_data = cookies.get(\"puzzle\" + h + COOKIE_SUFFIX[i]);\r\n        if (cookie_data) {\r\n          stored_progress = stored_progress.concat(cookie_data);\r\n        }\r\n      }\r\n      attempts[h] = stored_progress.length;\r\n    }\r\n    attempts.shift();\r\n    return attempts.reduce((x,y)=>x+y) + \" attempts (\" + attempts + \")\"\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"Puzzles\">\r\n        <Paper className={classes.paper}>\r\n          <h1>Puzzles</h1>\r\n          <h3>Max score: {puzzleInfo.map(x=> x.points).reduce((x, y) => x + y)} points <br/> {this.numAttempts()}</h3>\r\n          <h3></h3>\r\n          <Divider />\r\n            <div className=\"Act1\">\r\n              <br />\r\n              <Grid container spacing={4} style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n                {this.puzzlesList.map((puzzleId) => {\r\n                    return (\r\n                      <Grid item xs={12} sm={6} md={3} key={puzzleId}>\r\n                        <NavLink activeClassName=\"active\" className=\"link\" to={\"/puzzles/\" + puzzleId}>\r\n                        <button className={this.state.perms[puzzleId] === 1 ? \"ctfbutton ctfbuttonsolved\" : \"ctfbutton ctfbuttonunsolved\"}>\r\n                          #{puzzleId}: {puzzleInfo[puzzleId].name}\r\n                          <br /><br />\r\n                          {puzzleInfo[puzzleId].points}\r\n                        </button>\r\n                        </NavLink>\r\n                      </Grid>\r\n                    )\r\n              })}\r\n              </Grid>\r\n              <br />\r\n            </div>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Puzzles);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\nconst headCells = [\r\n  { id: 'id', numeric: false, disablePadding: false, label: 'Id' },\r\n  { id: 'g', numeric: false, disablePadding: false, label: 'Guess' },\r\n  { id: 'r', numeric: false, disablePadding: false, label: 'Response' },\r\n  { id: 'name', numeric: false, disablePadding: false, label: '' },\r\n];\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { order, orderBy } = props;\r\n\r\n  return (\r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n            align={headCell.numeric ? 'right' : 'left'}\r\n            padding={headCell.disablePadding ? 'none' : 'normal'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n            {headCell.label}\r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const [order, setOrder] = React.useState('desc');\r\n  const [orderBy, setOrderBy] = React.useState('id');\r\n  const [page, setPage] = React.useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(10);\r\n  const selected = [];\r\n  const dense = true;\r\n  let rows = JSON.parse(JSON.stringify(props.rows));\r\n  if (props.hideIncorrect === true) {\r\n    rows = rows.filter(row => row.r !== \"B\");\r\n  }\r\n\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const getBgColor = (response) => {\r\n    if (response.includes(\"A\")) {\r\n      return { backgroundColor: \"#d4edda\" }\r\n    } else if (response === \"B\") {\r\n      return { backgroundColor: \"#f8d7da\" }\r\n    } else {\r\n      return { backgroundColor: \"#f6f6cd\" }\r\n    }\r\n\r\n\r\n  }\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <colgroup>\r\n              <col style={{ width: '1%' }} />\r\n              <col style={{ width: '8%' }} />\r\n              <col style={{ width: '30%' }} />\r\n              <col style={{ width: '40%' }} />\r\n              <col style={{ width: '25%' }} />\r\n            </colgroup>\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  const isItemSelected = isSelected(row.name);\r\n                  const labelId = `enhanced-table-checkbox-${index}`;\r\n\r\n                  return (\r\n                    <TableRow\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={-1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                      style={getBgColor(row.r)}\r\n                    >\r\n                      <TableCell padding=\"checkbox\" >\r\n                      </TableCell>\r\n                      <TableCell component=\"th\" id={labelId} scope=\"row\">\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell align=\"left\">{row.g}</TableCell>\r\n                      <TableCell align=\"left\">{row.r === \"A\" ? \"ALLOWED\" : \"BLOCKED\"}</TableCell>\r\n                      <TableCell align=\"left\">{row.name ? row.name : \"\"}</TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n              {emptyRows > 0 && (\r\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\r\n                  <TableCell colSpan={6} />\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nimport styles from './commonStyles.js';\r\nimport EnhancedTableHead from './GuessTable.js';\r\nimport { ThemeContext } from \"./util/config.js\";\r\nimport puzzleInfo from './puzzleInfo.js';\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconst MAX_PER_COOKIE = 40;\r\nconst COOKIE_SUFFIX = ['a', 'b', 'c', 'd', 'e']\r\nconst MAX_COOKIES = COOKIE_SUFFIX.length;\r\nconst MAX_PUZZLES = 12;\r\n\r\nclass PuzzlePage extends React.Component {\r\n  static contextType = ThemeContext;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    let puzzleId = parseInt(props.match.params.puzzleId);\r\n    if (puzzleId > MAX_PUZZLES) {\r\n      this.state = {invalid: true};\r\n      return;\r\n    }\r\n    this.filter_fn = (msg) => {\r\n      try {\r\n        return puzzleInfo[puzzleId].filter_fn(msg);\r\n      } catch(e) {\r\n        console.log(e);\r\n        return false\r\n      }\r\n    };\r\n\r\n    this.state = {\r\n      puzzleId: puzzleId,\r\n      name: puzzleInfo[puzzleId].name,\r\n      pts: puzzleInfo[puzzleId].points,\r\n      body: puzzleInfo[puzzleId].body ? puzzleInfo[puzzleId].body : \"Additional info here.\",\r\n\r\n      teamGuesses: new Array(),\r\n      textField: \"\",\r\n      errorText: \"\",\r\n      hideIncorrect: false,\r\n      textFieldDisabled: false,\r\n    }\r\n    let stored_progress = [];\r\n    for (var i = 0; i < MAX_COOKIES; i++) {\r\n      let cookie_data = cookies.get(\"puzzle\" + puzzleId + COOKIE_SUFFIX[i]);\r\n      if (cookie_data) {\r\n        stored_progress = stored_progress.concat(cookie_data);\r\n      }\r\n    }\r\n    if (stored_progress) {\r\n      this.state.teamGuesses = stored_progress;\r\n    }\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (parseInt(this.props.match.params.puzzleId) !== this.state.puzzleId) {\r\n      window.location.reload();\r\n    }\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    for (var i = 0; i < MAX_COOKIES; i++) {\r\n      cookies.remove(\"puzzle\" + this.state.puzzleId + COOKIE_SUFFIX[i], { path: '/' });\r\n    }\r\n    console.log(error, errorInfo);\r\n    alert(\"Malformed save data detected, wiping saved attempts for this puzzle\");\r\n    window.location.reload();\r\n  }\r\n\r\n  updateState = (req, data) => {\r\n    this.setState({\r\n      [req]: data\r\n    });\r\n  }\r\n\r\n  updateTextField = (e) => {\r\n    let newValue = e.target.value;\r\n    if (/[^a-zA-Z0-9.\\/<>?;:\"'`!@#$%^&*()\\[\\]{}_+=|\\\\~\\-]/.test(newValue)) {\r\n      this.setState({ errorText: `Messages must only contain characters found on a regular keyboard (excluding spaces): a-zA-Z0-9.\\/<>?;:\"'!@#$%^&*()\\[\\]{}_+=|\\\\-~` + \"`\"});\r\n    } else if (newValue.length > 30) {\r\n      this.setState({ errorText: \"Message length must be <=30 characters\" });\r\n    } else {\r\n      this.setState({ errorText: \"\" });\r\n    }\r\n    this.setState({ textField: e.target.value });\r\n  }\r\n\r\n  submitAnswer = () => {\r\n    if (this.state.textField === \"\") {\r\n      return;\r\n    }\r\n    let guess = this.state.textField;\r\n    let responsePayload = {\r\n      g: this.state.textField,\r\n      id: this.state.teamGuesses.length + 1\r\n    }\r\n    if (this.filter_fn(guess)) {\r\n      responsePayload.r = \"A\"\r\n    } else {\r\n      responsePayload.r = \"B\"\r\n    }\r\n\r\n    this.setState(prevState => {\r\n      prevState.teamGuesses.push(responsePayload);\r\n      let offset = Math.max(prevState.teamGuesses.length - MAX_COOKIES * MAX_PER_COOKIE, 0)\r\n      for (var i = 0; i < MAX_COOKIES; i++) {\r\n        let start = i * MAX_PER_COOKIE + offset;\r\n        let guessSlice = prevState.teamGuesses.slice(start, start + MAX_PER_COOKIE);\r\n        if (guessSlice.length > 0) {\r\n          cookies.set(\"puzzle\" + prevState.puzzleId + COOKIE_SUFFIX[i], JSON.stringify(guessSlice));\r\n        }\r\n      }\r\n      \r\n      return { teamGuesses: prevState.teamGuesses, textField: \"\" }\r\n    });\r\n  }\r\n\r\n  switchToggle = (e) => {\r\n    this.setState(prevState => {\r\n      return { hideIncorrect: !prevState.hideIncorrect }\r\n    });\r\n  }\r\n\r\n  render() {\r\n      const { classes } = this.props;\r\n      if (this.state.invalid) {\r\n        return (<h1>Page not found :(</h1>)\r\n      }\r\n      return (\r\n        <div className=\"PuzzlePage\">\r\n          <Paper className={classes.paper}>\r\n          <Grid container spacing={4} style={{ paddingLeft: \"20px\", paddingRight: \"20px\" }}>\r\n            <Grid item xs={1} key={0}>\r\n              <NavLink activeClassName=\"active\" className=\"link\" to={\"/puzzles/\"}>\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.nextButton} onClick={this.nextPage} type=\"submit\">\r\n                  BACK\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n            <Grid item xs={1} key={0}/>\r\n            <Grid item xs={8} key={0}>\r\n              <h1 style={{ marginBottom: \"0px\" }}>{\"#\" + this.state.puzzleId + \": \" + this.state.name}</h1>\r\n            </Grid>\r\n            <Grid item xs={1} key={0}>\r\n              <NavLink activeClassName=\"active\" className=\"link\" to={\"/puzzles/\" + (this.state.puzzleId - 1)}>\r\n                  <Button variant=\"contained\" color=\"primary\" className={classes.nextButton} onClick={this.nextPage} disabled={this.state.puzzleId === 1} type=\"submit\">\r\n                      PREV\r\n                  </Button>\r\n                </NavLink>  \r\n            </Grid>\r\n            <Grid item xs={1} key={0}>\r\n              <NavLink activeClassName=\"active\" className=\"link\" to={\"/puzzles/\" + (this.state.puzzleId + 1)}>\r\n                <Button variant=\"contained\" color=\"primary\" className={classes.nextButton} onClick={this.nextPage} disabled={this.state.puzzleId >= 12} type=\"submit\">\r\n                    NEXT\r\n                </Button>\r\n              </NavLink>\r\n            </Grid>\r\n            </Grid>\r\n            \r\n            <h2 style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>{this.state.pts} {this.state.pts > 1 ? \"points\" : \"point\"}</h2>\r\n            <Divider />\r\n            <br />\r\n            <div className={classes.body}>\r\n            <center>\r\n              <i><div>Attempts will be saved in browser cookies. Due to cookie size limitations, only the most recent 200 attempts are saved.</div></i>\r\n              {this.state.body}\r\n              </center>\r\n            </div>\r\n            <br/>\r\n            <form autoComplete=\"off\" onSubmit={this.submitAnswer}>\r\n              <TextField\r\n                autoFocus\r\n                value={this.state.textField}\r\n                onChange={this.updateTextField}\r\n                error={this.state.errorText !== \"\"}\r\n                id=\"outlined-error-helper-text\"\r\n                label=\"Message\"\r\n                defaultValue=\"\"\r\n                helperText={this.state.errorText}\r\n                variant=\"outlined\"\r\n                disabled={this.state.textFieldDisabled}\r\n                style = {{width: 320}}\r\n              />\r\n            </form>\r\n            <br />\r\n            <Button variant=\"contained\" color=\"primary\" className={classes.submitButton} onClick={this.submitAnswer} disabled={this.state.errorText} type=\"submit\">\r\n              SEND\r\n            </Button>\r\n            <br />\r\n            <h1 style={{ marginBottom: \"0px\" }}>Attempts</h1>\r\n            <h2 style={{ marginTop: \"5px\", marginBottom: \"5px\" }}>{this.state.teamGuesses.length} attempts</h2>\r\n            <FormControlLabel\r\n              control={\r\n                <Switch\r\n                  checked={this.state.switchOn}\r\n                  onChange={this.switchToggle}\r\n                  name=\"switch\"\r\n                  color=\"primary\"\r\n                />\r\n              }\r\n              label=\"Hide blocked attempts\"\r\n            />\r\n            <Divider />\r\n            <EnhancedTableHead rows={this.state.teamGuesses} hideIncorrect={this.state.hideIncorrect} />\r\n          </Paper>\r\n        </div>\r\n      );\r\n    } \r\n}\r\n\r\nexport default withStyles(styles)(PuzzlePage);","import React from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport styles from './commonStyles.js';\r\n\r\nclass About extends React.Component {\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <div className=\"About\">\r\n        <Paper className={classes.paper}>\r\n          <h1>About</h1>\r\n          <Divider />\r\n          <br />\r\n          <div className={classes.body}>\r\n            \r\n          Submit messages and see which ones are allowed and which ones are blocked. Try to determine the filter rules from the responses!\r\n          </div>\r\n        </Paper>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(About);","import React from \"react\";\r\nimport {\r\n  Route,\r\n  HashRouter as Router,\r\n  Switch\r\n} from \"react-router-dom\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport Notfound from \"./notfound.js\";\r\nimport Home from '../Home.js';\r\nimport Puzzles from '../Puzzles.js';\r\nimport PuzzlePage from '../PuzzlePage.js';\r\nimport About from '../About.js';\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n  },\r\n});\r\n\r\nconst routing = (\r\n  <Router>\r\n    <div className=\"Router\">\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/puzzles/\" component={Puzzles} />\r\n        <Route path=\"/puzzles/:puzzleId\" component={PuzzlePage} />\r\n        <Route path=\"/about/\" component={About} />\r\n        <Route component={Notfound} />\r\n      </Switch>\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nclass Routing extends React.Component {\r\n  render() {\r\n    return (\r\n      <Grid\r\n        container\r\n        spacing={0}\r\n        direction=\"column\"\r\n        alignItems=\"center\"\r\n        justify=\"center\"\r\n      >\r\n        <Box width=\"75%\" maxWidth={1500} >\r\n            {routing}\r\n        </Box>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Routing);\r\n","const drawerWidth = 240;\r\nconst styles = theme => ({\r\n  root: {\r\n    display: 'flex',\r\n    overflowScrolling: \"touch\",\r\n    WebkitOverflowScrolling: \"touch\",\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24, // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'flex-end',\r\n    padding: '0 8px',\r\n    ...theme.mixins.toolbar,\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create(['width', 'margin'], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36,\r\n  },\r\n  menuButtonHidden: {\r\n    display: 'none',\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  drawerPaper: {\r\n    position: 'relative',\r\n    whiteSpace: 'nowrap',\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen,\r\n    }),\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: 'hidden',\r\n    transition: theme.transitions.create('width', {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen,\r\n    }),\r\n    width: theme.spacing(7),\r\n    [theme.breakpoints.up('sm')]: {\r\n      width: theme.spacing(9),\r\n    },\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing(3),\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n    overflowScrolling: \"touch\",\r\n    WebkitOverflowScrolling: \"touch\",\r\n  },\r\n  chartContainer: {\r\n    marginLeft: -22,\r\n  },\r\n\r\n  h5: {\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  \r\n});\r\n\r\nexport default styles;\r\n","import React from 'react';\r\nimport {\r\n  HashRouter as Router,\r\n  NavLink\r\n} from \"react-router-dom\";\r\nimport PropTypes from 'prop-types';\r\nimport classNames from 'classnames';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { BrowserView } from 'react-device-detect';\r\n\r\nimport Routing from './Routing.js';\r\nimport styles from './navBarStyles.js'\r\n\r\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core/styles';\r\nimport { ThemeContext, DEBUG_MODE } from \"../util/config.js\";\r\n\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\nconst MAX_PER_COOKIE = 40;\r\nconst COOKIE_SUFFIX = ['a', 'b', 'c', 'd', 'e']\r\nconst MAX_COOKIES = COOKIE_SUFFIX.length;\r\n\r\nlet theme = createMuiTheme();\r\ntheme = responsiveFontSizes(theme);\r\n\r\nclass NavBar extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loggedIn: false,\r\n      firstName: \"\",\r\n      email: \"\",\r\n      tokenId: \"\"\r\n    }\r\n  }\r\n\r\n\r\n  resetProgress = () => {\r\n    let ans = window.confirm(\"Are you sure you want to reset and remove all attempts?\");\r\n    if (!ans) {\r\n      return;\r\n    }\r\n    for (var i = 1; i <= 12; i++) {\r\n      for (var j = 0; j < MAX_COOKIES; j++) {\r\n        cookies.remove(\"puzzle\" + i + COOKIE_SUFFIX[j], { path: '/' });\r\n      }\r\n    }\r\n    console.log(\"Progress reset\");\r\n    window.location.reload();\r\n  }\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <ThemeProvider theme={theme}>\r\n        <ThemeContext.Provider value={{\r\n          loggedIn: this.state.loggedIn,\r\n          firstName: this.state.firstName,\r\n          fullName: this.state.fullName,\r\n          email: this.state.email,\r\n          tokenId: this.state.tokenId,\r\n          debug: false,\r\n        }}>\r\n          <div className={classes.root}>\r\n            <CssBaseline />\r\n            <AppBar\r\n              position=\"absolute\"\r\n              className={classNames(classes.appBar)}\r\n            >\r\n              <Toolbar disableGutters={true} className={classes.toolbar}>\r\n                <Grid container spacing={0}>\r\n                  <Grid item xs={4} key={1}>\r\n                    <BrowserView>\r\n                      <Typography\r\n                        component=\"h4\"\r\n                        variant=\"h6\"\r\n                        color=\"inherit\"\r\n                        noWrap\r\n\r\n                      >\r\n                        <div style={{ textAlign: 'left', paddingTop: \"7px\", paddingLeft: \"10px\", fontSize: \"16px\" }}>\r\n                          <div>{this.state.loggedIn ? \"Welcome back, \" + this.state.firstName : \"\"}</div>\r\n                        </div>\r\n                      </Typography>\r\n                    </BrowserView>\r\n                  </Grid>\r\n                  <Grid item xs={4} key={2}>\r\n                    <BrowserView>\r\n                      <div style={{ textAlign: 'center', textAlignVertical: 'center', paddingTop: \"3px\" }}>\r\n                        <Typography\r\n                          component=\"h1\"\r\n                          variant=\"h6\"\r\n                          color=\"inherit\"\r\n                          noWrap\r\n                          className={classes.title}\r\n                        >\r\n                          <Router>\r\n                            <NavLink activeClassName=\"active\" className=\"link\" to={\"/\"} type=\"menu\">\r\n                              <div style={{ marginLeft: '20px', textAlign: 'center' }}>\r\n                                Filtered!\r\n                              </div>\r\n                            </NavLink>\r\n                          </Router>\r\n                        </Typography>\r\n                      </div>\r\n                    </BrowserView>\r\n                  </Grid>\r\n                  <Grid item xs={4} key={3} >\r\n                    <div style={{ textAlign: 'right', paddingTop: \"2px\", display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-end\" }}>\r\n                      <Router>\r\n                      <NavLink activeClassName=\"active\" className=\"link\" to={\"/\"} type=\"menu\" style={{ marginRight: '20px' }}>\r\n                          <Button color=\"inherit\">Home</Button>\r\n                        </NavLink>\r\n                        <NavLink activeClassName=\"active\" className=\"link\" to={\"/puzzles/\"} type=\"menu\" style={{ marginRight: '20px' }}>\r\n                          <Button color=\"inherit\">Puzzles</Button>\r\n                        </NavLink>\r\n                        <BrowserView>\r\n                          <NavLink activeClassName=\"active\" className=\"link\" type=\"menu\" style={{ marginRight: '20px' }}>\r\n                          <Button color=\"inherit\" onClick={this.resetProgress}>Reset</Button>\r\n                        </NavLink>\r\n                        </BrowserView>\r\n                      </Router>\r\n                    </div>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n              </Toolbar>\r\n            </AppBar>\r\n            <main className={classes.content}>\r\n              <div className={classes.appBarSpacer} />\r\n              <Routing />\r\n            </main>\r\n          </div>\r\n        </ThemeContext.Provider></ThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nNavBar.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(styles)(NavBar);\r\n","import React from 'react';\r\nimport './App.css';\r\nimport NavBar from './pages/router/NavBar.js';\r\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    secondary: {\r\n      main: '#f4bc13',\r\n      contrastText: \"#ffffff\"\r\n    }\r\n  }\r\n});\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <MuiThemeProvider theme={theme}>\r\n          <NavBar />\r\n        </MuiThemeProvider>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}